{
    "swagger": "2.0",
    "info": {
        "version": "v2",
        "title": "EMS API v2",
        "description": "The second version of the REST-based API for accessing EMS data"
    },
    "host": "d1mo-api.us.efoqa.com:443",
    "basePath": "/api",
    "schemes": [
        "https"
    ],
    "paths": {
        "/v2/ems-systems/{emsSystemId}/analytics": {
            "get": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Searches for analytics by name.",
                "operationId": "Analytic_SearchForAnalytics",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The search terms used to find a list of analytics by name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "An optional group ID to specify where to limit the search. If not specified, all groups \r\n            are searched.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "The optional maximum number of matching results to return. If not specified, a \r\n            default value of 200 is used. Use 0 to return all results.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of analytics to search, including \"Full\", \"Physical\" or \"Logical\". A \r\n            null value specifies the default analytic set, which represents the full set of values exposed by the \r\n            backing EMS system.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "full",
                            "physical",
                            "logical"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Retrieves metadata information associated with an analytic such as a description or units.",
                "operationId": "Analytic_GetAnalyticInfo",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "analyticId",
                        "in": "body",
                        "description": "The analytic ID for which data is retrieved. These identifiers are typically \r\n            obtained from nodes in an analytic group tree.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/analytics": {
            "get": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Searches for analytics by name for a specific flight.",
                "operationId": "Analytic_SearchForFlightAnalytics",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when searching analytics.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The search terms used to find a list of analytics by name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "An optional group ID to specify where to limit the search. If not specified, all groups are \r\n            searched.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "The optional maximum number of matching results to return. If not specified, a \r\n            default value of 200 is used. Use 0 to return all results.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of analytics to search, including \"Full\", \"Physical\" or \"Logical\". A \r\n            null value specifies the default analytic set, which represents the full set of values exposed by the \r\n            backing EMS system.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "full",
                            "physical",
                            "logical"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Retrieves metadata information associated with an analytic such as a description or units.",
                "operationId": "Analytic_GetFlightAnalyticInfo",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving the analytic information.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "analyticId",
                        "in": "body",
                        "description": "The analytic ID for which data is retrieved. These identifiers are typically \r\n            obtained from nodes in an analytic group tree.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/analytic-groups": {
            "get": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Retrieves the contents of an analytic group, which is a hierarchical tree structure used to organize analytics.",
                "description": "The contents of a group includes both subgroups and analytics.",
                "operationId": "Analytic_GetAnalyticGroupContents",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "analyticGroupId",
                        "in": "query",
                        "description": "The ID of the group whose contents to retrieve. \r\n            If not specified, the contents of the root group will be returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of analytics we are interested in. \"Full\", \"Physical\" or \"Logical\". \r\n            A null value specifies the default analytic set, which represents the full set of values exposed by the backing EMS system.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "full",
                            "physical",
                            "logical"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticGroupContents"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/analytic-groups": {
            "get": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Retrieves the contents of an analytic group, which is a hierarchical tree structure used to organize analytics.",
                "description": "<p>The contents of a group includes both subgroups and analytics.</p>\r\n<p>In this resource a flight is specified which will enumerate analytics specific to the flight such as \r\n            physical parameters in addition to the analytics and groups which apply to all flights.</p>",
                "operationId": "Analytic_GetFlightAnalyticGroupContents",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving the analytic group.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "analyticGroupId",
                        "in": "query",
                        "description": "The ID of the group whose contents to retrieve. \r\n            If not specified, the contents of the root group will be returned instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category of analytics we are interested in. \"Full\", \"Physical\" or \"Logical\". \r\n            A null value specifies the default analytic set, which represents the full set of values exposed by the backing EMS system.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "full",
                            "physical",
                            "logical"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticGroupContents"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/analytics/query": {
            "post": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Queries offsets and values in time-series data for a specified flight and analytic.",
                "description": "<p>\r\n            This can be used to query for multiple analytics at the same time by providing more than one analytic ID\r\n            in the query. Keep in mind that querying for many analytics might cause your request to take a longer \r\n            period of time to complete.\r\n            </p>\r\n<p>Below are some guidelines to consider when using this API.\r\n            <ul><li>Use the <code>size</code> option to return a specified amount of interpolated samples. </li><li>Not specifying a <code>size</code> returns all data samples, but you can also use a range of <code>start</code> and <code>end</code> \r\n            \t\tvalues to limit the amount of data returned. You can't use this option with the <code>unsampledDataMode</code> \r\n            \t\toption.</li><li>Use the <code>offsets</code> option to return data for only a specified set of samples. If an analytic isn't\r\n            \t\tsampled at the offset, its interpolated value is returned. You can't use this option with the\r\n            \t\t<code>unsampledDataMode</code> option.</li><li>Use the <code>offsetType</code> option to return values only at sampled locations using the <code>sampledValues</code> option or at \r\n            \t\ta specific sampling rate using the <code>samplingRate</code> option. Since these options are more complex and can leave\r\n            \t\tsample locations with no value (i.e. the analytic isn't sampled at that location) or DNE values where the sample\r\n            \t\t<code>does not exist</code> you can use the <code>offsetType</code> in conjunction with the <code>unsampledDataMode</code>, the <code>unsampledValue</code>,\r\n            \t\tand/or the <code>doesNotExistValue</code> options. These are explained in greater detail below.</li><li>If you use the <code>unsampledDataMode</code> option with <code>offsetType</code> you can set how unsampled data is treated\r\n            \twith one of the following options:\r\n            \t\t<ul><li><code>leaveBlank</code> Leaves any unsampled data locations as blank values. This is the default.</li><li><code>uniquePreviousSample</code> leaves values blank except when there is a previous valid sampled \r\n            \t\t\tvalue that was skipped over due to the sampling rate if it is unchanged. This can be used to circumvent the \r\n            \t\t\tissue of possibly returning all blank values when the provided sampling rate doesn't match the analytic's \r\n            \t\t\tsampling rate.</li><li><code>stairStep</code> Any unsampled values are filled with the last known sampled value.</li><li><code>linearInterpolation</code> This performs a linear interpolation on the data to calculate a value for unsampled locations.</li><li><code>parameterDefault</code> Some analytics define their own default for how to treat unsampled data. This option uses that default setting.</li><li><code>previousSample</code> leaves values blank except when there is a previous valid sampled \r\n            \t\t\tvalue that was skipped over due to the sampling rate (regardless of change). This can be used to circumvent \r\n            \t\t\tthe issue of possibly returning all blank values when the provided sampling rate doesn't match the analytic's \r\n            \t\t\tsampling rate or if the values are not changing.</li></ul></li><li>Use the <code>unsampledValue</code> to provide your own value to be used for unsampled values. This only applies when using <code>offsetType</code> queries.</li><li>Use the <code>doesNotExistValue</code> to provide your own value for values that are DNE. This only applies when using <code>offsetType</code> queries.</li><li>Use the <code>discretesAsStrings</code> to specify whether the values of discrete parameters should be their string representations or their numeric value. This only applies when using <code>offsetType</code> queries.</li></ul></p>",
                "operationId": "Analytic_GetQueryResults",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record for which to query data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "body",
                        "description": "The information used to construct a query for which results are returned.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.QueryResult"
                        }
                    },
                    "400": {
                        "description": "If the specified query structure is invalid or incorrectly configured.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/analytics/metadata": {
            "post": {
                "tags": [
                    "Analytic APIs"
                ],
                "summary": "Returns the analytic metadata for a flight.",
                "description": "<p>There are two special values always returned by the metadata call.</p>\r\n<ul>\r\n  <li>Shape : [Single, Multiple, Unknown] : describes whether the result will be a single value or an array of values.</li>\r\n  <li>DataType : [Real, Integer, String, Boolean, DateTime, Unknown] : describes the type of data returned.</li>\r\n</ul>\r\n            The list of other properties\r\n            returned are specific to each analytic but may include:\r\n            <ul><li>Basic\\Comments</li><li>Basic\\Description</li><li>Information\\Comments</li><li>Information\\Description</li><li>Information\\UID</li><li>Parameter\\Abbreviation</li><li>Parameter\\Constant</li><li>Parameter\\ID</li><li>Parameter\\Name</li><li>Value\\Is Discrete</li><li>Value\\Operational Rate Max</li><li>Value\\Physical Range Min</li><li>Value\\Units</li><li>Value\\Wraps</li></ul>",
                "operationId": "Analytic_GetMetadata",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record for which to retrieve data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "analyticId",
                        "in": "body",
                        "description": "The analytic ID (wrapped in double quotes) for which metadata is retrieved. These \r\n            identifiers are typically obtained from nodes in an analytic group tree.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Metadata"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/analytic-set-groups": {
            "get": {
                "tags": [
                    "Analytic Set APIs"
                ],
                "summary": "Returns a collection of analytic set groups.",
                "operationId": "AnalyticSet_GetAnalyticSetGroups",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/analytic-set-groups/{groupId}": {
            "get": {
                "tags": [
                    "Analytic Set APIs"
                ],
                "summary": "Returns an analytic set group.",
                "operationId": "AnalyticSet_GetAnalyticSetGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the analytic set group to return.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/analytic-set-groups/{groupId}/analytic-sets/{analyticSetName}": {
            "get": {
                "tags": [
                    "Analytic Set APIs"
                ],
                "summary": "Returns an analytic set with the provided name from the group requested.",
                "operationId": "AnalyticSet_GetParameterSets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The ID of the analytic set group to retrieve the analytic set from.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "analyticSetName",
                        "in": "path",
                        "description": "The name of the analytic set to return.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSet"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A analytic set or group with the provided name or ID could not be found",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/fleets": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns the list of fleets the user has access to in their security context.",
                "operationId": "Asset_GetFleets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Fleet"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/fleets/{fleetId}": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns information for a fleet on the system.",
                "operationId": "Asset_GetFleet",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fleetId",
                        "in": "path",
                        "description": "The unique identifier of the fleet of interest.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Fleet"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A fleet with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/aircraft": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns the list of aircraft the user has access to in their security context.",
                "operationId": "Asset_GetAircraft",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fleetId",
                        "in": "query",
                        "description": "If specified, returns only the aircraft belonging to the indicated fleet.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Aircraft"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A fleet with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/aircraft/{aircraftId}": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns information for an aircraft on the system.",
                "operationId": "Asset_GetAircraftById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "aircraftId",
                        "in": "path",
                        "description": "The unique identifier of the aircraft of interest.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Aircraft"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "An aircraft with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/flight-phases": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns the list of flight phases.",
                "operationId": "Asset_GetFlightPhases",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.FlightPhase"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/flight-phases/{flightPhaseId}": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns information for a flight phase on the system.",
                "operationId": "Asset_GetFlightPhase",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightPhaseId",
                        "in": "path",
                        "description": "The unique identifier of the flight phase of interest.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.FlightPhase"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A flight phase with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/airports": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns the list of airports that have been visited by the EMS system or all the airports available\r\n            on the EMS system.",
                "description": "If includeAll is left as false just the airports that are significant to the flight data are included.",
                "operationId": "Asset_GetAirports",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "includeAll",
                        "in": "query",
                        "description": "If true, include all the airports on this EMS system. Defaults to false.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Airport"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/assets/airports/{airportId}": {
            "get": {
                "tags": [
                    "Asset APIs"
                ],
                "summary": "Returns information for an airport on the system.",
                "operationId": "Asset_GetAirport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "airportId",
                        "in": "path",
                        "description": "The unique identifier of the airport of interest.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Asset.Airport"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "An airport with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/database-groups": {
            "get": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Returns a database group with a matching ID containing only its immediate children in a hierarchical tree \r\n            used to organize databases.",
                "description": "Each EMS system has its own configured set of databases that are available for querying, such as flights,\r\n            downloads and events. Databases are organized using database groups in a tree structure since EMS\r\n            systems might expose a large number of databases. This API allows you to see one level of the tree\r\n            structure.",
                "operationId": "Database_GetDatabaseGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "description": "The unique identifier of the EMS database group whose contents to return. \r\n            If not specified, the contents of the root group are returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.DatabaseGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A database group at the specified path could not be found",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/field-groups": {
            "get": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Returns a field group with a matching ID containing only its immediate children in a hierarchical tree used \r\n            to organize fields.",
                "description": "Fields are organized using field groups in a tree structure since EMS systems and databases might expose \r\n            a large number of fields. This API allows you to see one level of the tree structure. This API returns only\r\n            a minimal amount of information about the fields returned. To get additional details for an individual, \r\n            field, see the \"field\" resource below.",
                "operationId": "Database_GetFieldGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database containing a field group to return.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "description": "The unique identifier of a field group whose contents to return. If not \r\n            specified, the contents of the root group are returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.FieldGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A field group at the specified path could not be found",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/fields/{fieldId}": {
            "get": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Returns information about a database field matching the specified ID.",
                "description": "Fields are elements in an EMS system that can be queried for results. For more details on how to query for\r\n            results, see the \"query\" resource below.",
                "operationId": "Database_GetField",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database containing a field to return.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "description": "The unique identifier of the field whose information to return.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Field"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A field with the specified ID could not be found",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/fields": {
            "get": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Returns all the fields matching the specified search options.",
                "description": "This API will return fields matching your search options. If no fields are found, an empty list is returned.",
                "operationId": "Database_GetFields",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the database containing fields to return.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "An optional field name search string used to match fields to return.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fieldGroupId",
                        "in": "query",
                        "description": "The optional parent field group ID whose contents to search.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeProfiles",
                        "in": "query",
                        "description": "An optional setting to indicate whether to search fields in profiles. By\r\n            default, this is false since including profile fields will significantly increase search time.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "The maximum number of fields to return. This defaults to 200 fields.\r\n            If this is set to 0 all the results will be returned.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Field"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/query": {
            "post": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Queries a database for information, composing the query with information provided in the specified \r\n            query structure.",
                "description": "<p>The advantage of this query route over async-query is its simplicity. This route executes a query and\r\n            returns the results in a single API call. Due to memory and network resource limitations, this route cannot\r\n            be used to fetch large result sets. The route limits the maximum number of result rows that can be returned\r\n            for a single query. If you do not specify a \"top\" limit to the results and the number of rows queried \r\n            exceeds the maximum allowed, the partial result boolean flag included in the response will be set to true.\r\n            If you need to access larger result sets, use the async-query route instead.</p>\r\n<p>Queries can contain reference to one or more fields and can include more complex querying operations \r\n            including: filtering, grouping, and sorting (by value). These operations are specified by the query model \r\n            you provide the API.</p>",
                "operationId": "Database_GetQueryResults",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "body",
                        "description": "The information used to construct a query for which results are returned.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.QueryResult"
                        }
                    },
                    "400": {
                        "description": "If the specified query structure is invalid or incorrectly configured. May also be returned if the top value specified is greater than the maximum number of rows that can be returned.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/async-query": {
            "post": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Creates a query on a database using the provided query structure and returns an ID that can be used to\r\n            fetch result data through other async-query routes.",
                "description": "<p>The advantage of the async-query routes over the basic query route is their ability to return very large\r\n            result sets, split across many API calls. For queries with small result sets, you may prefer to use the\r\n            basic query route, as it provides the simplicity of executing a query and returning the results in one call.\r\n            </p>\r\n<p>Use the <b>GET v2/ems/{emsSystemId}/databases/{databaseId}/async-query/{queryId}/read/{start}/{end}</b>\r\n            route to read rows from the async-query result set.</p>\r\n<p>Use the <b>DELETE v2/ems/{emsSystemId}/databases/{databaseId}/async-query/{queryId}</b> route to stop\r\n            an async query.</p>\r\n<p>Queries can contain reference to one or more fields and can include more complex querying operations \r\n            including: filtering, grouping, and sorting (by value). These operations are specified by the query model \r\n            you provide the API.</p>",
                "operationId": "Database_StartAsyncQuery",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "body",
                        "description": "The information used to construct a query.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.AsyncQueryInfo"
                        }
                    },
                    "400": {
                        "description": "If the specified query structure is invalid or incorrectly configured.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/async-query/{queryId}/read/{start}/{end}": {
            "get": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Returns rows between (inclusive) the start and end indexes from the async query with the given ID.",
                "description": "You can choose the number of rows returned by specifying an inclusive range of rows with the start and end \r\n            indexes. However, this route also limits the maximum number of result rows that can be reasonably returned \r\n            in a single call. If more values need to be read, simply make multiple calls to this route and use\r\n            the \"hasMoreRows\" flag to determine if the returned rows are the last rows in the query's result set.",
                "operationId": "Database_ReadAsyncQuery",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "queryId",
                        "in": "path",
                        "description": "The unique identifier of the query created by the API.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "The zero-based index of the first row to return.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "The zero-based index of the last row to return.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.AsyncQueryData"
                        }
                    },
                    "400": {
                        "description": "The specified start and end indexes are either not positive integers, an invalid inclusive range, or exceeded the maximum rows that can be returned).",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A query with the specified ID does not exist or expired.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/async-query/{queryId}": {
            "delete": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Stops the async query with the given ID.",
                "operationId": "Database_StopAsyncQuery",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "queryId",
                        "in": "path",
                        "description": "The unique identifier of the query created by the API.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The query was successfully stopped.",
                        "schema": {
                            "$ref": "#/definitions/System.Void"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A query with the specified ID does not exist or expired.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/create": {
            "post": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Creates one or more new data entities in the database.",
                "operationId": "Database_RunCreate",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to add data entities to.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "create",
                        "in": "body",
                        "description": "The information used to create one or more new data entities.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.CreateResult"
                        }
                    },
                    "400": {
                        "description": "If the specified create structure is invalid or incorrectly configured. In particular the content of createColumns must be a JSON array containing one JSON array for each data entity, and all the primary key columns must be provided for each data entity being created.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/update": {
            "put": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Runs an update query on one or more rows of data in the database.",
                "operationId": "Database_RunUpdate",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "update",
                        "in": "body",
                        "description": "The information used to construct an update query.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.UpdateResult"
                        }
                    },
                    "400": {
                        "description": "If the specified update query structure is invalid or incorrectly configured. In particular, the query must have a filter specified.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/databases/{databaseId}/delete": {
            "post": {
                "tags": [
                    "Database APIs"
                ],
                "summary": "Deletes one or more existing data entities in the database.",
                "operationId": "Database_RunDelete",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "databaseId",
                        "in": "path",
                        "description": "The unique identifier of the EMS database to delete data entities from.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delete",
                        "in": "body",
                        "description": "The information used to delete one or more data entities.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.DeleteResult"
                        }
                    },
                    "400": {
                        "description": "If the specified delete structure is invalid or incorrectly configured. In particular the content of deleteColumns must be a JSON array containing one JSON array for each data entity, and all the primary key columns must be provided for each data entity being deleted.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/ems-profiles/{profileId}": {
            "get": {
                "tags": [
                    "Ems Profile APIs"
                ],
                "summary": "[DEPRECATED] Returns profile results for a specific flight.",
                "description": "This route has been replaced by 'v2/ems-systems/{emsSystemId}/flights/{flightId}/profiles/{profileId}/query' \r\n            route which aligns better with existing API conventions.",
                "operationId": "EmsProfile_GetEmsProfileResults",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving profile information.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the APM profile, e.g. \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\" for \r\n            the library flight safety events profile.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResults"
                        }
                    },
                    "400": {
                        "description": "A profile with the specified ID does not exist, or is not accessible.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The specified flight or profile does not exist or the profile has not processed for this flight.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/ems-profiles": {
            "get": {
                "tags": [
                    "Ems Profile APIs"
                ],
                "summary": "[DEPRECATED] Returns information about a set of profiles for an EMS system.",
                "description": "This route has been replaced by 'v2/ems-systems/{emsSystemId}/profile-groups' and \r\n            'v2/ems-systems/{emsSystemId}/profiles' routes which align better with \r\n            existing API conventions and offers more features like searching and enumerating the profile group \r\n            hierarchy.",
                "operationId": "EmsProfile_GetEmsProfiles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.EmsProfile"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/ems-profiles/{profileId}/glossary": {
            "get": {
                "tags": [
                    "Ems Profile APIs"
                ],
                "summary": "[DEPRECATED] Returns the file content of an APM profile glossary for a specific profile and version.",
                "description": "<p>\r\n            This route has been replaced by 'v2/ems-systems/{emsSystemId}/profiles/{profileId}/glossary' route which \r\n            aligns better with existing API conventions and offers more features like returning JSON responses with \r\n            a more detailed glossary.\r\n            </p>\r\n<p>\r\n            This API is intended to be used in conjunction with the \r\n            \"ems-systems/{emsSystemId}/flights/{flightId}/ems-profiles/{profileId}\" API used to return APM (Automated \r\n            Parameter Measurement) profile result. Using the data returned from this API you can interpret and \r\n            better understand the results returned in  the profile results.\r\n            </p>",
                "operationId": "EmsProfile_GetEmsProfileGlossary",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the APM profile, e.g. \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\" for \r\n            the library flight safety events profile.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileVersionNumber",
                        "in": "query",
                        "description": "Numbered version of an APM profile. The current version of the profile \r\n            will be used if a version number is not provided.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format the glossary should be returned in. This defaults to CSV.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "json",
                            "csv"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.EmsProfileGlossary"
                        }
                    },
                    "400": {
                        "description": "Entered EMS Profile version number is invalid.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "EMS Profile Glossary could not be found on the EMS system.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems": {
            "get": {
                "tags": [
                    "Ems System APIs"
                ],
                "summary": "Returns a set of EMS systems the currently logged in user is able to access.",
                "operationId": "EmsSystem_GetEmsSystems",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Data.Model.EmsSystem"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/ping": {
            "get": {
                "tags": [
                    "Ems System APIs"
                ],
                "summary": "Ping an EMS system to verify that the specified system is currently up and running.",
                "operationId": "EmsSystem_Ping",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}": {
            "get": {
                "tags": [
                    "Ems System APIs"
                ],
                "summary": "Retrieves information about an EMS system. \r\n            This information can be optionally filtered by specifying a search term. For example, 'time' and 'TimeStamp' will \r\n            return the server time.",
                "operationId": "EmsSystem_GetServerInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "The case-insensitive search used to filter the returned EMS system information.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/System.Object"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/html-documentation/{version}": {
            "get": {
                "tags": [
                    "Html Documentation APIs"
                ],
                "summary": "Returns the HTML documentation for the specified version of the API.",
                "description": "The HTML documentation is returned as a \"text/html\" media type.",
                "operationId": "HtmlDocumentation_GetHtmlDocumentation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The version of the API for which documentation is returned, e.g. \"v1\", \"v2\".",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The version specified could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/airports": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns the list of active airports from the system.",
                "description": "Each EMS system has a list of active airports, which are actually in use in collected\r\n            flight data. This route returns all of the information on those airports. The IDs specified\r\n            in the returned data should be used elsewhere in these APIs.",
                "operationId": "Navigation_GetAirports",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationAirport"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/airports/{airportId}/runways": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns information on the runways connected to an airport.",
                "description": "Each airport is associated with one or more runways.\r\n            This route returns information on the runways for a single airport.",
                "operationId": "Navigation_GetRunways",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "airportId",
                        "in": "path",
                        "description": "The airport ID, obtained from the \"airports\" route.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationRunway"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/airports/{airportId}/procedures": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns information on the procedures connected to an airport.",
                "description": "Each airport is associated with one or more procedures, specifying how to take off and land.\r\n            This route returns information on the procedures for a single airport.",
                "operationId": "Navigation_GetProcedures",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "airportId",
                        "in": "path",
                        "description": "The airport ID, obtained from the \"airports\" route.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedure"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/procedures/{procedureId}/segments": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns information on the segments of procedures connected to an airport.",
                "description": "Each airport is associated with one or more procedures, specifying how to take off and land.\r\n            This route returns all of the information we have on the segments for a single procedure.",
                "operationId": "Navigation_GetProcedureSegments",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "procedureId",
                        "in": "path",
                        "description": "The procedure ID, obtained from the \"procedures\" route.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedureSegment"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/waypoints/{waypointId}": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns information on a waypoint.",
                "description": "Waypoints are referenced from procedures obtained from the \"procedures\" route. These\r\n            IDs can be used to look up further info on waypoints.",
                "operationId": "Navigation_GetWaypoint",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "waypointId",
                        "in": "path",
                        "description": "The waypoint ID, obtained from the \"procedures\" route.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationWaypoint"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/navigation/navaids/{navaidId}": {
            "get": {
                "tags": [
                    "Navigation APIs"
                ],
                "summary": "Returns information on a navaid.",
                "description": "Navaids are referenced from procedures obtained from the \"procedures\" route. These\r\n            IDs can be used to look up further info on navaids.",
                "operationId": "Navigation_GetNavaid",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "navaidId",
                        "in": "path",
                        "description": "The navaid ID, obtained from the \"procedures\" route.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationNavaid"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/parameter-sets": {
            "get": {
                "tags": [
                    "Parameter Set APIs"
                ],
                "summary": "Returns a collection of parameter sets' information.",
                "operationId": "ParameterSet_GetParameterSets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "description": "The optional ID of the parameter set group to return.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSetGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A parameter set group with the provided id could not be found",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/profiles/{profileId}/query": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Queries profile results for a specified flight and profile.",
                "description": "<p>This API allows retrieving all of the timepoints, measurements, and events calculated for a \r\n            specific flight with the configured profile.</p>\r\n<p>Use this API in conjunction with  \r\n            \"ems-systems/{emsSystemId}/flights/{flightId}/profiles/{profileId}/glossary\" API so you can interpret and \r\n            better understand the results returned in the results.</p>",
                "operationId": "Profile_GetProfileResults",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving profile information.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the APM profile, e.g. \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\" for \r\n            the library flight safety events profile.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResults"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The specified flight or profile does not exist (or is not accessible) or the profile has not processed for this flight.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/profile-groups": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Returns a profile group with a matching ID containing only its immediate children in a hierarchical tree \r\n            used to organize profiles.",
                "description": "Each EMS system has its own configured set of profiles that are available. Profiles are organized using \r\n            profile groups in a tree structure since EMS systems might expose a large number of profiles. This API \r\n            allows you to see one level of the tree structure.",
                "operationId": "Profile_GetProfileGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "description": "The unique identifier of the profile group whose contents to return. If not \r\n            specified, the contents of the root group are returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGroup"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A profile group with the specified ID could not be found or does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/profiles": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Returns all the profiles matching the specified search options.",
                "description": "<p>\r\n            This API will return profiles matching your search options. If no profiles are found, an empty list is \r\n            returned.\r\n            </p>\r\n<p>\r\n            It is common for a large number of profiles to be defined on an EMS system. To reduce the size and complexity\r\n            of your query, try to specify a parent profile group ID and/or a name to use in the search.\r\n            </p>",
                "operationId": "Profile_GetProfiles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "description": "The optional parent profile group ID whose contents to search.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "An optional profile name search string used to match profiles to return.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.Profile"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/profiles/{profileId}/glossary": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Returns a \"glossary\" for a specific profile and version, which helps define the results that can be returned\r\n            in a profile.",
                "description": "<p>\r\n  <strong>Please note:</strong> this API is prototypical in this release and its return values are subject \r\n            to change in an upcoming release. In its current implementation, it is (1) including some unnecessary \r\n            results and (2) not returning all available information.</p>\r\n<p>Use this API in conjunction with  \r\n            \"ems-systems/{emsSystemId}/flights/{flightId}/profiles/{profileId}/query\" API so you can interpret and \r\n            better understand the results returned in the results.</p>",
                "operationId": "Profile_GetProfileGlossary",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the profile whose glossary to return, e.g.\r\n            \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileVersion",
                        "in": "query",
                        "description": "Integer version of the profile to return. If not specified the current version \r\n            of the profile is used by default.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format of the returned glossary. Defaults to JSON.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "json",
                            "csv"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGlossary"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A profile with the specified ID and version could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/profiles/{profileId}/events": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Returns the events for a specific profile.",
                "operationId": "Profile_GetProfileEvents",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the profile whose events to return, e.g.\r\n            \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\".",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.Event"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A profile with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/profiles/{profileId}/events/{eventId}": {
            "get": {
                "tags": [
                    "Profile APIs"
                ],
                "summary": "Returns an event for a specific profile.",
                "operationId": "Profile_GetEventParameterSet",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The unique identifier of the profile whose event parameter set is returned, e.g.\r\n            \"A7483C44-9DB9-4A44-9EB5-F67681EE52B0\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "The integer ID for the event.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.Event"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "An event with the specified ID could not be found in the specified profile.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau/trusted": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns a Tableau \"trusted\" URL that consumers can use to gain access to Tableau content.",
                "description": "<p>The returned \"trusted\" URL allows consumers connect to Tableau using the current user's security\r\n            context. Once loaded in an iframe of a browser, Tableau sets a cookie to initiate the user's session.</p>",
                "operationId": "Tableau_GetTrusted",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "site",
                        "in": "query",
                        "description": "The name of the Tableau site for which to return a trusted URL. If not specified, the \r\n            default site is used.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Tableau.Trusted"
                        }
                    },
                    "400": {
                        "description": "The specified site was not a valid site name configured on the server.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A Tableau server has not been configured or is not included in the EMS Online installation.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns information about the configured EMS Online Tableau server.",
                "description": "<p>The return is information about the Tableau server configured in EMS Online.</p>",
                "operationId": "Tableau_GetTableau",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "site",
                        "in": "query",
                        "description": "The name of the Tableau site for which to return Tableau server information. If not specified, the default site is used.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Tableau.TableauServer"
                        }
                    },
                    "400": {
                        "description": "The specified site was not a valid site name configured on the server.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A Tableau server has not been configured or is not included in the EMS Online installation.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau/sites": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns the Tableau sites containing projects, workbooks and views the user can access.",
                "operationId": "Tableau_GetSites",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Site"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A Tableau server has not been configured or is not included in the EMS Online installation.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau/sites/{siteId}/projects": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns the Tableau projects in the specified site, containing workbooks and views the user can access.",
                "operationId": "Tableau_GetSiteProjects",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "The ID of the site containing the projects to return.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Project"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "There is either no Tableau server configured or no site with the provided site id.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau/sites/{siteId}/workbooks": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns the Tableau workbooks in the specified site, containing views the user can access.",
                "operationId": "Tableau_GetSiteWorkbooks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "The ID of the site containing the workbooks to return.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Workbook"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "There is either no Tableau server configured, or no site with the provided site id.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/tableau/sites/{siteId}/workbooks/{workbookId}/views": {
            "get": {
                "tags": [
                    "Tableau APIs"
                ],
                "summary": "Returns the Tableau views in the specified site and workbook, containing content the user can visualize.",
                "operationId": "Tableau_GetSiteWorkbookViews",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "The ID of the site containing the view.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workbookId",
                        "in": "path",
                        "description": "The ID of the workbook containing the view.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.View"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "There is either no Tableau server configured, no site with the provided site id, or no workbook with the provided workbook id.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "Information could not be returned, likely due to a server-side configuration issue.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/kml-trajectories/{trajectoryId}": {
            "get": {
                "tags": [
                    "Trajectory APIs"
                ],
                "summary": "Returns trajectory content in \"KML\" format for a specific flight.",
                "operationId": "Trajectory_GetKmlForFlight",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving the trajectory KML.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "trajectoryId",
                        "in": "path",
                        "description": "Identifier specifying the type of trajectory to provide.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/System.Object"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/trajectories": {
            "get": {
                "tags": [
                    "Trajectory APIs"
                ],
                "summary": "Returns a trajectory path for a specific flight.",
                "operationId": "Trajectory_GenerateTrajectoryForFlight",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record to use when retrieving the trajectory data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start offset in the data, in seconds from the start of the data. If not specified, the beginning of the flight will be used.",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end offset in the data, in seconds from the start of the data. If not specified, the end of the flight will be used.",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.TrajectoryValueArray"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/trajectory-configurations": {
            "get": {
                "tags": [
                    "Trajectory APIs"
                ],
                "summary": "Returns an array of KML trajectory options.",
                "operationId": "Trajectory_GetTrajectoryConfigurations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.TrajectoryConfiguration"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads": {
            "post": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Starts a new upload.",
                "operationId": "Transfer_StartAsync",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS system on which to start a new upload.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Information about the upload to start.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadParameters"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "If the specified EMS system isn't configured to support uploads",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/{transferId}/{first}/{last}": {
            "put": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Uploads a chunk of a file. This will fail if any chunks have been skipped in the specified file.",
                "description": "The practical limit for a single chunk is less than 4MB or so, dependent on the web server's configuration.\r\n            If you receive 500 responses, try smaller chunk sizes.",
                "operationId": "Transfer_ChunkAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS system to which the client is uploading.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first",
                        "in": "path",
                        "description": "The byte index of the first byte that will be uploaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "last",
                        "in": "path",
                        "description": "The byte index of the last byte that will be uploaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed, or the uploaded data didn't match the state of the upload",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload with the specified ID doesn't exist or was not valid",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "The uploaded chunk was too large",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/{transferId}": {
            "get": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Gets the status of an upload in progress.",
                "operationId": "Transfer_Status",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS system to which the client is uploading.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadStatus"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload with the specified ID doesn't exist or was not valid",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/{transferId}/finish": {
            "get": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Completes an existing upload in progress.",
                "description": "<p>This will examine everything that's been transferred to make sure that it is intact, then\r\n            give a status report in response.</p>\r\n<p>The use of this call is not required unless the file is being streamed (i.e. there was no\r\n            totalSize passed in the beginning of the file). In that case, this call is necessary to\r\n            tell the server that all data are received.</p>",
                "operationId": "Transfer_FinishAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS system to which the client is uploading.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload with the specified ID doesn't exist or was not valid",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/{transferId}/cancel": {
            "get": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Cancels an existing upload in progress.",
                "description": "If successful, this call will delete the file in progress and set the associated database record to canceled.",
                "operationId": "Transfer_CancelAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS system to which the client is uploading.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload with the specified ID doesn't exist or was not valid",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/uploads": {
            "get": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Get a list of upload records from the server.",
                "description": "For administrative users, this will return a list of all uploads; otherwise only the uploads associated\r\n            to the current user will be returned.",
                "operationId": "Transfer_GetUploads",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "maxEntries",
                        "in": "query",
                        "description": "The maximum number of entries to return; this is capped at 50, and\r\n            50 will be used if it's not specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadRecord"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/processing-status/{transferId}": {
            "get": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Gets the EMS processing status for a single upload.",
                "description": "When using this route, make sure to use EMS system and upload IDs that match. Results for IDs that do not \r\n            exist will still return valid results, but will indicate that the uploading processing is incomplete, \r\n            which, while true, may be misleading.",
                "operationId": "Transfer_GetUploadProcessingStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS server to query for the specified uploads.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload for which to return status information.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingStatus"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/uploads/processing-status": {
            "post": {
                "tags": [
                    "Transfer APIs"
                ],
                "summary": "Gets the EMS processing status for a set of uploads.",
                "description": "When using this route, make sure to use EMS system and upload IDs that match. Results for IDs that do not \r\n            exist will still return valid results, but will indicate that the uploading processing is incomplete, \r\n            which, while true, may be misleading.",
                "operationId": "Transfer_GetUploadProcessingStatusMultiple",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The ID of the EMS server to query for the specified uploads.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ids",
                        "in": "body",
                        "description": "The list of IDs of the upload for which to return status information.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "There were no upload IDs provided in the request.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Retrieves the buckets you have access to.",
                "operationId": "Upload_GetBuckets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.Bucket"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Get a list of upload records from the server for a specific bucket.",
                "operationId": "Upload_GetUploads",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to retrieve uploads for.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxEntries",
                        "in": "query",
                        "description": "The maximum number of entries to return; this is capped at 50, and\r\n            50 will be used if it's not specified.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadRecord"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload bucket was not found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Starts a new upload.",
                "operationId": "Upload_StartAsync",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket in which to start a new upload.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Information about the upload to start.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadParameters"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload bucket was not found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/{transferId}/{first}/{last}": {
            "put": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Uploads a chunk of a file. This will fail if any chunks have been skipped in the specified file.",
                "description": "The practical limit for a single chunk is less than 4MB or so, dependent on the web server's configuration.\r\n            If you receive 500 responses, try smaller chunk sizes.",
                "operationId": "Upload_ChunkAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to which the client is uploading.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first",
                        "in": "path",
                        "description": "The byte index of the first byte that will be uploaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "last",
                        "in": "path",
                        "description": "The byte index of the last byte that will be uploaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed, or the uploaded data didn't match the state of the upload",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload bucket was not found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "500": {
                        "description": "The uploaded chunk was too large",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/{transferId}": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Gets the status of an upload in progress.",
                "operationId": "Upload_Status",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to which the client is uploading.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadStatus"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload with the specified ID doesn't exist or was not valid",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/{transferId}/finish": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Completes an existing upload in progress.",
                "description": "<p>This will examine everything that's been transferred to make sure that it is intact, then\r\n            give a status report in response.</p>\r\n<p>The use of this call is not required unless the file is being streamed (i.e. there was no\r\n            totalSize passed in the beginning of the file). In that case, this call is necessary to\r\n            tell the server that all data are received.</p>",
                "operationId": "Upload_FinishAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to which the client is uploading.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload bucket was not found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/{transferId}/cancel": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Cancels an existing upload in progress.",
                "description": "If successful, this call will delete the file in progress and set the associated database record to canceled.",
                "operationId": "Upload_CancelAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to which the client is uploading.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload, returned originally by the upload start call.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult"
                        }
                    },
                    "400": {
                        "description": "The upload has already completed",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "The upload bucket was not found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/processing-status/{transferId}": {
            "get": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Gets the EMS processing status for a single upload.",
                "description": "When using this route, make sure to use a bucket and upload ID that match. Results for IDs that do not \r\n            exist will still return valid results, but will indicate that the uploading processing is incomplete, \r\n            which, while true, may be misleading.",
                "operationId": "Upload_GetUploadProcessingStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to query for the specified upload.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferId",
                        "in": "path",
                        "description": "The ID of the upload for which to return status information.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingStatus"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "Could not find an EMS system for the provided bucket. ",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/buckets/{bucketName}/uploads/processing-status": {
            "post": {
                "tags": [
                    "Upload APIs"
                ],
                "summary": "Gets the EMS processing status for a set of uploads.",
                "description": "When using this route, make sure to use a bucket and upload IDs that match. Results for IDs that do not \r\n            exist will still return valid results, but will indicate that the uploading processing is incomplete, \r\n            which, while true, may be misleading.",
                "operationId": "Upload_GetUploadProcessingStatusMultiple",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "bucketName",
                        "in": "path",
                        "description": "The name of the bucket to query for the specified uploads.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "body",
                        "description": "The list of IDs of the upload for which to return status information.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "There were no upload IDs provided in the request.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "Could not find an EMS system for the provided bucket. ",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/weather/taf/parse": {
            "post": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Parses and validates a raw TAF report and returns parsed information in a format that can be more easily\r\n            consumed.",
                "description": "The TAF format doesn't contain contextual information about the date or month the TAF was issued. This \r\n            information can be specified in the request as a ISO 8601 date format, typically as \"YYYY-MM-DD\" or \r\n            \"YYYY-MM\".",
                "operationId": "Weather_ParseTaf",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "options",
                        "in": "body",
                        "description": "An object with the TAF string to parse along with extra information to help with \r\n            parsing.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafParseOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafReport"
                        }
                    },
                    "400": {
                        "description": "If the specified TAF options were invalid or the TAF string could not be parsed.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/weather/metar/parse": {
            "post": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Parses and validates a raw METAR report and returns parsed information in a format that can be more easily\r\n            consumed.",
                "operationId": "Weather_ParseMetar",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "options",
                        "in": "body",
                        "description": "An object with the METAR string to parse.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarParseOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarReport"
                        }
                    },
                    "400": {
                        "description": "If the specified METAR options were invalid or the METAR string could not be parsed.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/weather/tafs": {
            "post": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Returns a list of collected TAF reports matching the specified search criteria for the provided EMS system.",
                "description": "This API will return TAF reports matching your search options. If none are found, an empty list is returned.",
                "operationId": "Weather_QueryTafs",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "options",
                        "in": "body",
                        "description": "An object defining the search criteria to use for querying TAF reports.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafReport"
                            }
                        }
                    },
                    "400": {
                        "description": "If no options were specified in the body of the request.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/weather/metars": {
            "post": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Returns a list of collected METAR reports matching the specified search criteria for the provided EMS \r\n            system.",
                "description": "This API will return METAR reports matching your search options. If none are found, an empty list is\r\n            returned.",
                "operationId": "Weather_QueryMetars",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "options",
                        "in": "body",
                        "description": "An object defining the search criteria to use for querying METAR reports.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarReport"
                            }
                        }
                    },
                    "400": {
                        "description": "If no options were specified in the body of the request.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/weather": {
            "get": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Returns a list of all collected TAF and METAR reports for a specified flight.",
                "description": "<p>\r\n            If the specified flight doesn't have any weather data, empty lists will be returned in the result.\r\n            </p>\r\n<p>\r\n            METAR and TAF reports that are related to flights in EMS can also be queried by building queries using the \r\n            Database APIs. This API provides a simple wrapper around those APIs to make it easy to query for weather \r\n            data\r\n            </p>",
                "operationId": "Weather_GetWeatherForFlight",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record for which to return TAF reports.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.WeatherReport"
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A flight with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/weather/tafs": {
            "get": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Returns a list of collected TAF reports for a specified flight.",
                "description": "<p>\r\n            If the specified flight doesn't have any TAF reports, an empty list will be returned in the result.\r\n            </p>\r\n<p>\r\n            TAF reports that are related to flights in EMS can also be queried by building queries using the Database \r\n            APIs. This API provides a simple wrapper around those APIs to make it easy to query for TAFs.\r\n            </p>",
                "operationId": "Weather_GetTafsForFlight",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record for which to return TAF reports.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafReport"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A flight with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v2/ems-systems/{emsSystemId}/flights/{flightId}/weather/metars": {
            "get": {
                "tags": [
                    "Weather APIs"
                ],
                "summary": "Returns a list of collected METAR reports for a specified flight.",
                "description": "<p>\r\n            If the specified flight doesn't have any METAR reports, an empty list will be returned in the result.\r\n            </p>\r\n<p>\r\n            METAR reports that are related to flights in EMS can also be queried by building queries using the Database \r\n            APIs. This API provides a simple wrapper around those APIs to make it easy to query for METARs.\r\n            </p>",
                "operationId": "Weather_GetMetarsForFlight",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "emsSystemId",
                        "in": "path",
                        "description": "The unique identifier of the system containing the EMS data.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "flightId",
                        "in": "path",
                        "description": "The integer ID of the flight record for which to return METAR reports.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarReport"
                            }
                        }
                    },
                    "401": {
                        "description": "You do not have access to the requested resource.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "404": {
                        "description": "A flight with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    },
                    "503": {
                        "description": "The maximum number of concurrent requests has been reached.",
                        "schema": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.Model.Error"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticId": {
            "description": "Provides an identifier for an individual analytic.",
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier of the analytic.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticInfo": {
            "description": "Encapsulates information about an analytic.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier for the analytic",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the analytic",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the analytic",
                    "type": "string"
                },
                "units": {
                    "description": "The units of the analytic",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.Model.Error": {
            "required": [
                "message",
                "messageDetail",
                "unexpected"
            ],
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "messageDetail": {
                    "type": "string"
                },
                "unexpected": {
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticGroupContents": {
            "description": "Represents the contents of an analytic group.",
            "type": "object",
            "properties": {
                "groups": {
                    "description": "An in-order listing of the groups contained in the specified group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticGroup"
                    }
                },
                "analytics": {
                    "description": "An in-order listing of the analytics contained in the specified group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticGroup": {
            "description": "Represents a group in the exposed tree of analytics for an EMS installation.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of the group",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the group",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the group",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Analytic.Query": {
            "description": "Represents the options used to make up an analytic query.",
            "required": [
                "select"
            ],
            "type": "object",
            "properties": {
                "select": {
                    "description": "An array specifying the analytics to select and return in query results. Use null or an empty array to\r\n            return only offset values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticSelect"
                    }
                },
                "start": {
                    "format": "double",
                    "description": "The optional start offset in the data, in seconds from the start of the data. If not specified, the \r\n            beginning of the available data is used",
                    "type": "number"
                },
                "end": {
                    "format": "double",
                    "description": "The optional end offset in the data, in seconds from the start of the data. If not specified, the \r\n            end of the available data is used",
                    "type": "number"
                },
                "offsets": {
                    "description": "The optional set of offsets to return in query results. Use as an alternative to specifying a range of \r\n            values using start and end",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "size": {
                    "format": "int32",
                    "description": "The optional limit that specifies the total number of offsets and values to return in query results",
                    "type": "integer"
                },
                "unsampledDataMode": {
                    "description": "This determines how to treat data values for offsets that are not sampled. If left unset this defaults to 'leaveBlank'.\r\n            This only applies when performing queries using \"offsetType\"",
                    "enum": [
                        "leaveBlank",
                        "uniquePreviousSample",
                        "stairStep",
                        "linearInterpolation",
                        "parameterDefault",
                        "previousSample"
                    ],
                    "type": "string"
                },
                "unsampledValue": {
                    "description": "This optional parameter replaces any unsampled (blank) values with a constant value. This defaults to a null value.\r\n            This only applies when performing queries using \"offsetType\"",
                    "type": "string"
                },
                "doesNotExistValue": {
                    "description": "This optional parameter replaces any values that come back as DNE (does not exist) with a constant value. This defaults to \"DNE\".\r\n            This only applies when performing queries using \"offsetType\"",
                    "type": "string"
                },
                "offsetType": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.OffsetType",
                    "description": "This defines the way in which the offsets are determined. This is required if Offsets or Size has not been set"
                },
                "discretesAsStrings": {
                    "description": "This optional parameter, when set to true, displays discrete values as their respective string values. This defaults to true.\r\n            This only applies when performing queries using \"offsetType\"",
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticSelect": {
            "description": "Represents an individual analytic that can be selected in a query.",
            "required": [
                "analyticId"
            ],
            "type": "object",
            "properties": {
                "analyticId": {
                    "description": "The unique string identifier of the analytic to select in a query",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Analytic.OffsetType": {
            "description": "Class for determining which offsets to sample an analytic at.",
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "description": "Determines the way to retrieve samples for an analytic query.",
                    "enum": [
                        "sampledValues",
                        "fixedRate"
                    ],
                    "type": "string"
                },
                "samplingRate": {
                    "format": "double",
                    "description": "Offsets are calculated using this sampling rate when using 'FixedRate' sampling type.",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Analytic.QueryResult": {
            "description": "Represents the time-series data result of an analytic query.",
            "required": [
                "offsets",
                "results"
            ],
            "type": "object",
            "properties": {
                "offsets": {
                    "description": "An array of query result offsets, each representing seconds from the start of the data",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "results": {
                    "description": "An array of analytic result values for each of the analytics selected in the query containing values for\r\n            each offset",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticResult"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Analytic.AnalyticResult": {
            "description": "Represents the results of a query of an individual analytic, housing the values for the offsets contained\r\n            in the related query result.",
            "required": [
                "analyticId",
                "values"
            ],
            "type": "object",
            "properties": {
                "analyticId": {
                    "description": "The unique string identifier of the analytic queried",
                    "type": "string"
                },
                "values": {
                    "description": "The array of analytic values corresponding to offsets specified in the query result",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/System.Object"
                    }
                },
                "error": {
                    "description": "Any error that may have occurred when retrieving or attempting to retrieve the values for the analytic.\r\n            This field is only available if there is an error.",
                    "type": "string"
                }
            }
        },
        "System.Object": {
            "type": "object",
            "properties": {}
        },
        "Adi.Ems.Web.Api.V2.Dto.Metadata": {
            "description": "Encapsulates metadata information for a parameter or analytic in EMS.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The metadata for the object.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.MetadataItem"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.MetadataItem": {
            "description": "Encapsulates a single piece of metadata.",
            "type": "object",
            "properties": {
                "key": {
                    "description": "The metadata key.",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/System.Object",
                    "description": "The metadata value."
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetGroup": {
            "description": "A container for analytic sets.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "groupId": {
                    "description": "The ID of the group. This should be a relative path with backslashes replaced with colons.",
                    "type": "string"
                },
                "groups": {
                    "description": "An array of groups contained by this group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetGroup"
                    }
                },
                "sets": {
                    "description": "An array of analytic sets contained by this group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSet"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSet": {
            "description": "Encapsulates the data that defines an AnalyticSet.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the AnalyticSet.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional description of the ParameterSet.",
                    "type": "string"
                },
                "items": {
                    "description": "An array of the analytics contained in the AnalyticSet.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetItem"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.AnalyticSet.AnalyticSetItem": {
            "description": "A model that encapsulates the data for a single analytic in an analytic set.",
            "type": "object",
            "properties": {
                "chartIndex": {
                    "format": "int32",
                    "description": "The index of the chart that this analytic info belongs to, or null if no index specified.",
                    "type": "integer"
                },
                "analytic": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo",
                    "description": "The analytic that is represented by this analytic set item."
                },
                "customName": {
                    "description": "The custom name the user specified for the item, or null if not-specified.",
                    "type": "string"
                },
                "color": {
                    "description": "The color to use for the line in hexadecimal color specification \"#RRGGBB\", or null if no color specified.",
                    "type": "string"
                },
                "customRange": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.Core.Dto.DataRange",
                    "description": "Optional override for the vertical scale for an analytic."
                },
                "customDigitsAfterDecimal": {
                    "format": "int32",
                    "description": "Optional override for the number of digits to display.",
                    "type": "integer"
                },
                "lineWidth": {
                    "format": "int32",
                    "description": "Optional value from 1 to 5 for the width of the line.",
                    "type": "integer"
                },
                "displaySampleMarker": {
                    "description": "Optional value specifying whether the parrmeter should display shapes to indicate the sampled values.",
                    "type": "boolean"
                },
                "sampleMarkerShape": {
                    "description": "If set, describes the shape to use for the sampled values.\r\n            Possible values: [Square, Circle, Triangle, InvertedTriangle, Cross, Star]",
                    "type": "string"
                },
                "lineStyle": {
                    "description": "If set, describes the line style to use when drawing.\r\n            Possible values: [Dash, Dot, DashDot, DashDotDot, Solid]",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.Core.Dto.DataRange": {
            "type": "object",
            "properties": {
                "min": {
                    "format": "double",
                    "type": "number"
                },
                "max": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Asset.Fleet": {
            "description": "Represents a 'Fleet' in the EMS system.\r\n            A fleet in this sense is a group of aircraft using the same configuration.\r\n            There may be several fleets representing a particular model of aircraft, each showing a specific configuration\r\n            of the airframe.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The identifier of the fleet within the system.",
                    "type": "integer"
                },
                "description": {
                    "description": "The description for this fleet.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Asset.Aircraft": {
            "description": "An aircraft in the system refers to an airframe with a particular tail number.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The identifier of the aircraft within the system",
                    "type": "integer"
                },
                "description": {
                    "description": "The description for this aircraft",
                    "type": "string"
                },
                "fleetIds": {
                    "description": "Each aircraft can be mapped to 0-N fleets in the system. \r\n            Because a fleet represents a configuration for a airframe and those configurations can change over time,\r\n            it stands to reason that each aircraft can be mapped to more than one of them",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "isActive": {
                    "description": "Whether this aircraft is active in the system",
                    "type": "boolean"
                },
                "isApproved": {
                    "description": "Whether this aircraft has been approved",
                    "type": "boolean"
                },
                "fdwEnabled": {
                    "description": "Whether this aircraft is enabled for FDW or not",
                    "type": "boolean"
                },
                "odwEnabled": {
                    "description": "Whether this aircraft is enabled for ODW or not",
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Asset.FlightPhase": {
            "description": "A flight phase is a coarse division of a flight into sections, such as takeoff, climb and enroute.\r\n            The flight phases are used as inputs into some analytics.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The identifier of the flight phase within the system.",
                    "type": "integer"
                },
                "description": {
                    "description": "The description for this phase of flight.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Asset.Airport": {
            "description": "Encapsulates the definition of an airport.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The identifier of the airport within the system.",
                    "type": "integer"
                },
                "codeIata": {
                    "description": "The IATA code associated with this airport.",
                    "type": "string"
                },
                "codeIcao": {
                    "description": "The ICAO code associated with this airport.",
                    "type": "string"
                },
                "codeFaa": {
                    "description": "The FAA / Regional code associated with this airport.",
                    "type": "string"
                },
                "codePreferred": {
                    "description": "The preferred code to use for display. This is typically either the ICAO or FAA code, but can be overridden by the user.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the airport.",
                    "type": "string"
                },
                "city": {
                    "description": "The city of the airport.",
                    "type": "string"
                },
                "country": {
                    "description": "The country of the airport.",
                    "type": "string"
                },
                "latitude": {
                    "format": "double",
                    "description": "The latitude of the airport.",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "The longitude of the airport.",
                    "type": "number"
                },
                "elevation": {
                    "format": "double",
                    "description": "The elevation of the airport, in feet.",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.DatabaseGroup": {
            "description": "Represents a folder in the database tree of an EMS installation.",
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier for the database group",
                    "type": "string"
                },
                "name": {
                    "description": "The display name for the database group",
                    "type": "string"
                },
                "groups": {
                    "description": "An ordered listing of child database groups contained in this group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.DatabaseGroup"
                    }
                },
                "databases": {
                    "description": "An ordered listing of child databases contained in this group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Database"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Database": {
            "description": "Represents a database type exposed by an EMS installation.",
            "required": [
                "id",
                "pluralName",
                "singularName",
                "primaryKeyFields"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier for the database",
                    "type": "string"
                },
                "pluralName": {
                    "description": "A plural display name for the database",
                    "type": "string"
                },
                "singularName": {
                    "description": "A singular display name for the database",
                    "type": "string"
                },
                "primaryKeyFields": {
                    "description": "The list of primary key fields for the database",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.PrimaryKeyField"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.PrimaryKeyField": {
            "description": "Represents a primary key field for a database type exposed by an EMS installation.",
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier for the primary key",
                    "type": "string"
                },
                "suggestedColumnName": {
                    "description": "Suggested name for the primary key field when stored in a column format (if any)",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.FieldGroup": {
            "description": "Represents a folder in the data source tree of an EMS installation.",
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier for the field group",
                    "type": "string"
                },
                "name": {
                    "description": "The display name for the field group",
                    "type": "string"
                },
                "groups": {
                    "description": "An ordered list of child groups contained in a field group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.FieldGroup"
                    }
                },
                "fields": {
                    "description": "An ordered list of child fields contained in a field group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Field"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Field": {
            "description": "Represents an individual field that can be accessed within a data source.",
            "required": [
                "id",
                "type",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier for the field",
                    "type": "string"
                },
                "type": {
                    "description": "The data type of the underlying data stored for the field",
                    "enum": [
                        "boolean",
                        "dateTime",
                        "discrete",
                        "number",
                        "string"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The display name for the field",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Query": {
            "description": "Represents the options used to make up a data source query.",
            "required": [
                "select"
            ],
            "type": "object",
            "properties": {
                "select": {
                    "description": "An array specifying the fields to select and return as columns in the query results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.SelectColumn"
                    }
                },
                "groupBy": {
                    "description": "An array specifying the fields by which to group aggregate operations. If not specified, no grouping\r\n            is performed",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.GroupByColumn"
                    }
                },
                "orderBy": {
                    "description": "An array specifying the selected columns by which to order result rows. Results are always ordered by the\r\n            results value, not by the display formatted value (configured to be returned by the format property). If\r\n            not specified, results are returned in default database ordering",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.OrderByColumn"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Filter",
                    "description": "A filter used to narrow the query results"
                },
                "format": {
                    "description": "Value formatting that should be performed on results values before returning. If not specified, no results\r\n            formatting is performed. This can be overridden by specifying a value for the Format property of a SelectColumn",
                    "enum": [
                        "none",
                        "display"
                    ],
                    "type": "string"
                },
                "distinct": {
                    "description": "Whether to remove duplicate rows from query results <b>before formatting</b> the results. Using a format\r\n            value other than 'none' can reduce results precision, leading to cases where two distinct rows appear\r\n            equivalent after formatting is applied. Defaults to false if not specified",
                    "type": "boolean"
                },
                "top": {
                    "format": "int32",
                    "description": "Identifies a subset of rows to return.\r\n            The subset is formed by selecting only the first N rows of the set, where N is a positive integer provided \r\n            as the value of this property. If not specified, all rows are returned",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.SelectColumn": {
            "description": "Represents a column of data that can be selected in a data source query.",
            "required": [
                "fieldId"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "The unique string identifier of the field to select in a query",
                    "type": "string"
                },
                "aggregate": {
                    "description": "An optional aggregate operation to perform on the column. Omission of this property results in no aggregate \r\n            operation being performed",
                    "enum": [
                        "none",
                        "avg",
                        "count",
                        "max",
                        "min",
                        "stdev",
                        "sum",
                        "var"
                    ],
                    "type": "string"
                },
                "format": {
                    "description": "Value formatting that should be performed on this field's value before returning.\r\n            This will override the query's display value",
                    "enum": [
                        "none",
                        "display"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.GroupByColumn": {
            "description": "Represents a column of data that can be used in a group-by clause of a data source query.",
            "required": [
                "fieldId"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "The unique string identifier of the field to use in a group-by clause of a query",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.OrderByColumn": {
            "description": "Represents a column of data that can be used in a order-by clause of a data source query.",
            "required": [
                "fieldId"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "The unique string identifier of the field to use in a order-by clause of a query",
                    "type": "string"
                },
                "aggregate": {
                    "description": "An optional aggregate operation to perform on the column. Omission of this property results in no aggregate \r\n            operation being used in the ordering",
                    "enum": [
                        "none",
                        "avg",
                        "count",
                        "max",
                        "min",
                        "stdev",
                        "sum",
                        "var"
                    ],
                    "type": "string"
                },
                "order": {
                    "description": "The ordering behavior to use for the column values. The omission of this property results in ascending order",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Filter": {
            "description": "Represents the operations and arguments that can be used to filter a data source query.",
            "required": [
                "operator",
                "args"
            ],
            "type": "object",
            "properties": {
                "operator": {
                    "description": "The unique string identifier of the operation to perform",
                    "enum": [
                        "isTrue",
                        "isFalse",
                        "isNull",
                        "isNotNull",
                        "and",
                        "or",
                        "not",
                        "in",
                        "notIn",
                        "plus",
                        "minus",
                        "multiply",
                        "divide",
                        "modulo",
                        "equal",
                        "notEqual",
                        "lessThan",
                        "lessThanOrEqual",
                        "greaterThan",
                        "greaterThanOrEqual",
                        "betweenInclusive",
                        "betweenLowerExclusive",
                        "betweenUpperExclusive",
                        "betweenExclusive",
                        "notBetweenInclusive",
                        "notBetweenLowerExclusive",
                        "notBetweenUpperExclusive",
                        "notBetweenExclusive",
                        "integerRangeInclude",
                        "integerRangeExclude",
                        "realRangeInclude",
                        "realRangeExclude",
                        "like",
                        "notLike",
                        "allWords",
                        "anyWords",
                        "noWords",
                        "dateRelative",
                        "dateSpecificMonths",
                        "dateSpecificMonth",
                        "dateBeforeMonth",
                        "dateOnAfterMonth",
                        "dateSpecificDays",
                        "dateSpecificDay",
                        "dateBeforeDay",
                        "dateOnAfterDay",
                        "dateTimeRange",
                        "dateTimeBefore",
                        "dateTimeOnAfter",
                        "dateQuarterOfYear",
                        "dateMonthOfYear",
                        "dateDayOfWeek",
                        "dateTimeHourOfDay"
                    ],
                    "type": "string"
                },
                "args": {
                    "description": "An ordered list of arguments to provide the operator. The requirements for the arguments depend on which \r\n            operation is being performed",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.FilterArgument"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.FilterArgument": {
            "description": "Represents an argument in a filter.",
            "required": [
                "type",
                "value"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the filter argument, describing the role of the argument.",
                    "enum": [
                        "none",
                        "filter",
                        "field",
                        "constant"
                    ],
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/System.Object",
                    "description": "The value represented by the filter argument."
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.QueryResult": {
            "description": "Represents the tabular results of a data source query.",
            "required": [
                "header",
                "rows",
                "isPartialResult"
            ],
            "type": "object",
            "properties": {
                "header": {
                    "description": "An ordered list of header column information, describing the fields included in the results and matching \r\n            the order of columns in the resulting data rows",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.QueryResultHeader"
                    }
                },
                "rows": {
                    "description": "An array of arrays representing the resulting data rows of a query. Each inner array represents a single \r\n            results row",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/System.Object"
                        }
                    }
                },
                "isPartialResult": {
                    "description": "Indicates whether the rows returned are a partial query result because the maximum amount of rows that can \r\n            be returned has been reached.",
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.QueryResultHeader": {
            "description": "Represents a header column in data source query result.",
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique string identifier of the field associated with this column",
                    "type": "string"
                },
                "name": {
                    "description": "The user-friendly display name of the field associated with this column",
                    "type": "string"
                },
                "units": {
                    "description": "The units of values of the field associated with this column. This value may be empty if not applicable",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.AsyncQueryInfo": {
            "description": "Passed back to the client when an async query is started. This contains query header\r\n            information, and a unique ID, with which the user can later read data for this query.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The ID of the query; this will be used when making subsequent calls to the query APIs.",
                    "type": "string"
                },
                "inactivityTimeout": {
                    "format": "int32",
                    "description": "The number of seconds of inactivity after which an async query is eligible for automatic deletion.",
                    "type": "integer"
                },
                "header": {
                    "description": "An ordered list of header column information, describing the fields included in the results and matching \r\n            the order of columns in the resulting data rows.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.QueryResultHeader"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.AsyncQueryData": {
            "description": "Represents the tabular results of a data source query obtained from an async query.",
            "required": [
                "rows",
                "hasMoreRows"
            ],
            "type": "object",
            "properties": {
                "rows": {
                    "description": "An array of arrays representing the resulting data rows of a query. Each inner array represents a single results row",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/System.Object"
                        }
                    }
                },
                "hasMoreRows": {
                    "description": "Whether the query has one or more rows in its result set at an index greater than the last row returned",
                    "type": "boolean"
                }
            }
        },
        "System.Void": {
            "type": "object",
            "properties": {}
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Create": {
            "description": "Represents the options used to make up a data entity creation.",
            "required": [
                "createColumns"
            ],
            "type": "object",
            "properties": {
                "createColumns": {
                    "description": "An array specifying the fields to set during the creation (and their values). This should always include primary key fields.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Column"
                        }
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Column": {
            "description": "Represents a column to be modified.",
            "required": [
                "fieldId",
                "value"
            ],
            "type": "object",
            "properties": {
                "fieldId": {
                    "description": "The unique string identifier of the field to modify.",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/System.Object",
                    "description": "The value for the field."
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.CreateResult": {
            "description": "Represents the result of an update.",
            "required": [
                "rowsAdded"
            ],
            "type": "object",
            "properties": {
                "rowsAdded": {
                    "format": "int32",
                    "description": "The number of rows added by the creation.",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Update": {
            "description": "Represents the options used to make up an update.",
            "required": [
                "updateColumns"
            ],
            "type": "object",
            "properties": {
                "updateColumns": {
                    "description": "An array specifying the fields to update (and their values).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Column"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Filter",
                    "description": "A filter used to narrow the update results."
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.UpdateResult": {
            "description": "Represents the result of an update.",
            "required": [
                "rowsUpdated"
            ],
            "type": "object",
            "properties": {
                "rowsUpdated": {
                    "format": "int32",
                    "description": "The number of rows affected by the update.",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.Delete": {
            "description": "Represents the options used to make up a data entity deletion.",
            "required": [
                "deleteColumns"
            ],
            "type": "object",
            "properties": {
                "deleteColumns": {
                    "description": "A collection of arrays (one for each data entity being deleted) which contains the primary\r\n            key column and value pairs for the data entity to delete.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Schema.Column"
                        }
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Schema.DeleteResult": {
            "description": "Represents the result of an update.",
            "required": [
                "rowsDeleted"
            ],
            "type": "object",
            "properties": {
                "rowsDeleted": {
                    "format": "int32",
                    "description": "The number of rows deleted",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResults": {
            "description": "Encapsulates all the profile results for a flight.",
            "required": [
                "profileVersion",
                "parameterFiltering",
                "measurements",
                "timepoints",
                "events"
            ],
            "type": "object",
            "properties": {
                "profileVersion": {
                    "format": "int32",
                    "description": "The numeric version of the profile that was processed to generate the results. This\r\n            corresponds to an index in the array of version history entries for the profile",
                    "type": "integer"
                },
                "parameterFiltering": {
                    "description": "Whether automatic parameter filtering was enabled when the profile was processed",
                    "type": "boolean"
                },
                "measurements": {
                    "description": "The top-level (non-event-based) measurements",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "timepoints": {
                    "description": "The top-level (non-event-based) timepoints",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "events": {
                    "description": "The events detected in the flight",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultsEventRecord"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue": {
            "description": "Encapsulates information about a profile results value (measurement or timepoint).",
            "required": [
                "itemId"
            ],
            "type": "object",
            "properties": {
                "itemId": {
                    "format": "int32",
                    "description": "The id of the item in the profile.",
                    "type": "integer"
                },
                "dataValue": {
                    "format": "double",
                    "description": "The computed data value for the given item",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultsEventRecord": {
            "description": "Encapsulates information about an event result stored in the database.",
            "required": [
                "recordNumber",
                "eventType",
                "phaseOfFlight",
                "severity",
                "status",
                "falsePositive",
                "startTime",
                "endTime",
                "globalMeasurements",
                "globalTimepoints",
                "localMeasurements",
                "localTimepoints",
                "comments"
            ],
            "type": "object",
            "properties": {
                "recordNumber": {
                    "format": "int32",
                    "description": "The unique id of the event in the database",
                    "type": "integer"
                },
                "eventType": {
                    "format": "int32",
                    "description": "The unique id of the event definition that generated this event",
                    "type": "integer"
                },
                "phaseOfFlight": {
                    "format": "int32",
                    "description": "The phase of flight where the event occurred (a value from the EMS POF list)",
                    "type": "integer"
                },
                "severity": {
                    "format": "int32",
                    "description": "The event severity (a value from the EMS Severity list)",
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "description": "The status of the event (a value from the EMS Status list). Typically this is defaulted to\r\n            0 for new events, but in some data-merge scenarios we need to import a non-default value\r\n            from a remote system",
                    "type": "integer"
                },
                "falsePositive": {
                    "format": "int32",
                    "description": "The false positive value for the event (a value from the EMS False Positive list).\r\n            Typically this is defaulted to 0 for new events, but in some data-merge scenarios we\r\n            need to import a non-default value from a remote system",
                    "type": "integer"
                },
                "startTime": {
                    "format": "double",
                    "description": "The starting offset for the event",
                    "type": "number"
                },
                "endTime": {
                    "format": "double",
                    "description": "The ending offset for the event",
                    "type": "number"
                },
                "globalMeasurements": {
                    "description": "The global event measurements (defined for all events)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "globalTimepoints": {
                    "description": "The global event timepoints (defined for all events)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "localMeasurements": {
                    "description": "The event-specific measurements (different for each event type)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "localTimepoints": {
                    "description": "The event-specific timepoints (different for each event type)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultValue"
                    }
                },
                "comments": {
                    "description": "The event comments. Usually this is empty, but it's required for some data-merge\r\n            scenarios.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultComment"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.ProfileResultComment": {
            "description": "Encapsulates information about a comment.",
            "required": [
                "user",
                "date",
                "comment"
            ],
            "type": "object",
            "properties": {
                "user": {
                    "description": "The user that wrote the comment",
                    "type": "string"
                },
                "date": {
                    "format": "date-time",
                    "description": "The date and time that the comment was added (UTC)",
                    "type": "string"
                },
                "comment": {
                    "description": "The text of the comment",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.EmsProfile": {
            "description": "Represents an APM (Automated Parameter Measurement) profile in an EMS system.",
            "required": [
                "profileId",
                "profileGuid",
                "profileName",
                "library",
                "currentVersion",
                "path"
            ],
            "type": "object",
            "properties": {
                "profileId": {
                    "format": "int32",
                    "description": "The local identifier for a profile",
                    "type": "integer"
                },
                "profileGuid": {
                    "description": "The unique identifier of a profile in the system",
                    "type": "string"
                },
                "profileName": {
                    "description": "The name of the profile",
                    "type": "string"
                },
                "library": {
                    "description": "Flag for if a profile is a library profile",
                    "type": "boolean"
                },
                "currentVersion": {
                    "format": "int32",
                    "description": "The version of the profile",
                    "type": "integer"
                },
                "path": {
                    "description": "Path to the profile's location",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.EmsProfileGlossary": {
            "description": "",
            "type": "object",
            "properties": {
                "glossaryVersion": {
                    "format": "int32",
                    "description": "The version of the EMS glossary the results were generated from.",
                    "type": "integer"
                },
                "profileId": {
                    "format": "int32",
                    "description": "The local identifier of the profile",
                    "type": "integer"
                },
                "profileGuid": {
                    "description": "The unique GUID of the profile in the system",
                    "type": "string"
                },
                "currentVersion": {
                    "format": "int32",
                    "description": "The version of the associated profile",
                    "type": "integer"
                },
                "currentVersionGuid": {
                    "description": "The GUID identifier for the version of this profile.",
                    "type": "string"
                },
                "glossaryItems": {
                    "description": "Array of entries in this glossary.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.EmsProfile.GlossaryItem"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.EmsProfile.GlossaryItem": {
            "description": "Represents a single entry for an item in a profile glossary.",
            "type": "object",
            "properties": {
                "recordType": {
                    "description": "A character representing a profile glossary entries record type.",
                    "type": "string"
                },
                "scope": {
                    "description": "A character representing the scope of this entry.",
                    "type": "string"
                },
                "itemId": {
                    "format": "int32",
                    "description": "A unique integer id for this item.",
                    "type": "integer"
                },
                "eventTypeId": {
                    "format": "int32",
                    "description": "The event type id of this item. This is only available for valid event types.",
                    "type": "integer"
                },
                "dataType": {
                    "description": "A character representing the data type of this entry.",
                    "type": "string"
                },
                "logicalId": {
                    "description": "A GUID defining this item's logical id.",
                    "type": "string"
                },
                "name": {
                    "description": "The name provided for this item.",
                    "type": "string"
                },
                "units": {
                    "description": "An optional unit provided for this item.",
                    "type": "string"
                },
                "firstAssociatedItemType": {
                    "description": "The item type of the first associated item.",
                    "type": "string"
                },
                "firstAssociatedItemScope": {
                    "description": "The scope of the first associated item.",
                    "type": "string"
                },
                "firstAssociatedItemId": {
                    "format": "int32",
                    "description": "The item id of the first associated item.",
                    "type": "integer"
                },
                "secondAssociatedItemType": {
                    "description": "The item type of the second associated item.",
                    "type": "string"
                },
                "secondAssociatedItemScope": {
                    "description": "The scope of the second associated item.",
                    "type": "string"
                },
                "secondAssociatedItemId": {
                    "format": "int32",
                    "description": "The item id of the second associated item.",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Data.Model.EmsSystem": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dirAdi": {
                    "type": "string"
                },
                "dirCollection": {
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationAirport": {
            "description": "Information about a single airport.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The unique identifier for this airport.",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the airport.",
                    "type": "string"
                },
                "ataCode": {
                    "description": "The ATA (FAA) code is the US-specific 3-letter identifier (e.g. ORD)",
                    "type": "string"
                },
                "city": {
                    "description": "The city of the airport.",
                    "type": "string"
                },
                "country": {
                    "description": "The country of the airport.",
                    "type": "string"
                },
                "emsCode": {
                    "description": "The airport code as it should be displayed by EMS apps.",
                    "type": "string"
                },
                "icaoCode": {
                    "description": "The ICAO code is the international 4-letter identifier (e.g. KORD).",
                    "type": "string"
                },
                "latitude": {
                    "format": "double",
                    "description": "The latitude of the airport.",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "The longitude of the airport.",
                    "type": "number"
                },
                "altitude": {
                    "format": "double",
                    "description": "The altitude of the airport",
                    "type": "number"
                },
                "magneticVariation": {
                    "format": "double",
                    "description": "The magnetic variation of the airport.",
                    "type": "number"
                },
                "type": {
                    "description": "The type of airport (e.g. civil, military)",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationRunway": {
            "description": "Various pieces of information associated with a runway.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The unique identifier for the runway.",
                    "type": "integer"
                },
                "airportId": {
                    "format": "int32",
                    "description": "The unique identifier of the airport for this runway.",
                    "type": "integer"
                },
                "string": {
                    "description": "A text value associated with the runway.",
                    "type": "string"
                },
                "length": {
                    "format": "double",
                    "description": "The length of the runway.",
                    "type": "number"
                },
                "width": {
                    "format": "double",
                    "description": "The width of the runway.",
                    "type": "number"
                },
                "oppositeId": {
                    "format": "int32",
                    "description": "The dafif id of the reciprocal runway (i.e. landing in the opposite direction on this runway).",
                    "type": "integer"
                },
                "isParallel": {
                    "description": "Whether the runway is parallel.",
                    "type": "boolean"
                },
                "headingTrue": {
                    "format": "double",
                    "description": "The true heading of the runway",
                    "type": "number"
                },
                "headingMagnetic": {
                    "format": "double",
                    "description": "The magnetic heading of the runway.",
                    "type": "number"
                },
                "takeoffDistance": {
                    "format": "double",
                    "description": "The takeoff distance of the runway.",
                    "type": "number"
                },
                "landingDistance": {
                    "format": "double",
                    "description": "The landing distance of the runway.",
                    "type": "number"
                },
                "latitudeStart": {
                    "format": "double",
                    "description": "The runway's starting latitude.",
                    "type": "number"
                },
                "latitudeEnd": {
                    "format": "double",
                    "description": "The runway's ending latitude.",
                    "type": "number"
                },
                "longitudeStart": {
                    "format": "double",
                    "description": "The runway's starting longitude.",
                    "type": "number"
                },
                "longitudeEnd": {
                    "format": "double",
                    "description": "The runway's ending longitude.",
                    "type": "number"
                },
                "altitudeStart": {
                    "format": "double",
                    "description": "The runway's starting altitude.",
                    "type": "number"
                },
                "altitudeEnd": {
                    "format": "double",
                    "description": "The runway's ending altitude.",
                    "type": "number"
                },
                "slope": {
                    "format": "double",
                    "description": "The slope of the runway.",
                    "type": "number"
                },
                "thresholdDisplaced": {
                    "format": "double",
                    "description": "The threshold displaced value associated with the runway.",
                    "type": "number"
                },
                "thresholdLatitude": {
                    "format": "double",
                    "description": "The threshold latitude value associated with the runway.",
                    "type": "number"
                },
                "thresholdLongitude": {
                    "format": "double",
                    "description": "The threshold longitude value associated with the runway.",
                    "type": "number"
                },
                "thresholdElevation": {
                    "format": "double",
                    "description": "The threshold elevation value associated with the runway.",
                    "type": "number"
                },
                "thresholdCrossHeight": {
                    "format": "double",
                    "description": "The threshold crossheight value associated with the runway.",
                    "type": "number"
                },
                "thresholdToGlideslopeDistance": {
                    "format": "double",
                    "description": "The threshold to glideslope distance associated with the runway.",
                    "type": "number"
                },
                "lighting": {
                    "description": "Bitflags indicating the available lighting for the runway.",
                    "type": "string"
                },
                "glideslopeAngle": {
                    "format": "double",
                    "description": "The glideslope angle value associated with the runway.",
                    "type": "number"
                },
                "glideslopeLatitude": {
                    "format": "double",
                    "description": "The glideslope latitude value associated with the runway.",
                    "type": "number"
                },
                "glideslopeLongitude": {
                    "format": "double",
                    "description": "The glideslope longitude value associated with the runway.",
                    "type": "number"
                },
                "glideslopeAltitude": {
                    "format": "double",
                    "description": "The glideslope altitude value associated with the runway.",
                    "type": "number"
                },
                "localizerWidth": {
                    "format": "double",
                    "description": "The localizer width value associated with the runway.",
                    "type": "number"
                },
                "localizerNavaid": {
                    "format": "int32",
                    "description": "The navaid id of the localizer navaid.",
                    "type": "integer"
                },
                "localizerFrequency": {
                    "format": "double",
                    "description": "The localizer frequency value associated with the runway.",
                    "type": "number"
                },
                "backcourseLocalizerFrequency": {
                    "format": "double",
                    "description": "The backcourse localizer frequency value associated with the runway.",
                    "type": "number"
                },
                "ilsBearingCourse": {
                    "format": "double",
                    "description": "The magnetic heading to fly the ILS.",
                    "type": "number"
                },
                "dmeNavaid": {
                    "format": "int32",
                    "description": "The navid id of the localizer dme.",
                    "type": "integer"
                },
                "dmeBias": {
                    "format": "double",
                    "description": "The DME bias for the runway (the distance in NM from the DME to the landing threshold).",
                    "type": "number"
                },
                "innerMarkerLatitude": {
                    "format": "double",
                    "description": "The inner marker latitude value associated with the runway.",
                    "type": "number"
                },
                "innerMarkerLongitude": {
                    "format": "double",
                    "description": "The inner marker longitude value associated with the runway.",
                    "type": "number"
                },
                "innerMarkerAltitude": {
                    "format": "double",
                    "description": "The inner marker altitude value associated with the runway.",
                    "type": "number"
                },
                "middleMarkerNavaid": {
                    "format": "int32",
                    "description": "The navaid id of the middle marker, if any.",
                    "type": "integer"
                },
                "middleMarkerLatitude": {
                    "format": "double",
                    "description": "The middle marker latitude value associated with the runway.",
                    "type": "number"
                },
                "middleMarkerLongitude": {
                    "format": "double",
                    "description": "The middle marker longitude value associated with the runway.",
                    "type": "number"
                },
                "middleMarkerAltitude": {
                    "format": "double",
                    "description": "The middle marker altitude value associated with the runway.",
                    "type": "number"
                },
                "outerMarkerNavaid": {
                    "format": "double",
                    "description": "The navaid id of the outer marker, if any.",
                    "type": "number"
                },
                "outerMarkerLatitude": {
                    "format": "double",
                    "description": "The outer marker latitude value associated with the runway.",
                    "type": "number"
                },
                "outerMarkerLongitude": {
                    "format": "double",
                    "description": "The outer marker longitude value associated with the runway.",
                    "type": "number"
                },
                "outerMarkerAltitude": {
                    "format": "double",
                    "description": "The outer marker altitude value associated with the runway.",
                    "type": "number"
                },
                "locatorNavaid": {
                    "format": "int32",
                    "description": "The navaid id of the compass locator, if any.",
                    "type": "integer"
                },
                "locatorLatitude": {
                    "format": "double",
                    "description": "The locator latitude value associated with the runway.",
                    "type": "number"
                },
                "locatorLongitude": {
                    "format": "double",
                    "description": "The locator longitude value associated with the runway.",
                    "type": "number"
                },
                "locatorAltitude": {
                    "format": "double",
                    "description": "The locator altitude value associated with the runway.",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedure": {
            "description": "Various pieces of information associated with a procedure.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The unique identiifer for this procedure.",
                    "type": "integer"
                },
                "cycleDate": {
                    "description": "A text value representing the cycle date of the procedure.",
                    "type": "string"
                },
                "emergencySafeAltitude": {
                    "format": "double",
                    "description": "The emergency safe altitude of the procedure.",
                    "type": "number"
                },
                "string": {
                    "description": "A text identifier of the procedure.",
                    "type": "string"
                },
                "transitionalAltitude": {
                    "format": "double",
                    "description": "The transition altitude of the procedure.",
                    "type": "number"
                },
                "transitionalLevel": {
                    "format": "double",
                    "description": "The transition level of the procedure.",
                    "type": "number"
                },
                "type": {
                    "description": "The type of the procedure.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedureSegment": {
            "description": "Various pieces of information associated with a procedure segment.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The segment type.",
                    "type": "string"
                },
                "transitionId": {
                    "description": "The procedure segment id.",
                    "type": "string"
                },
                "sequenceNumber": {
                    "format": "int32",
                    "description": "The procedure segment sequence number.",
                    "type": "integer"
                },
                "trackCode": {
                    "description": "The procedure segment",
                    "type": "string"
                },
                "waypointId": {
                    "format": "int32",
                    "description": "The procedure segment waypoint id.",
                    "type": "integer"
                },
                "waypointDescCodes": {
                    "description": "The procedure segment waypoint description codes.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "waypointBearing": {
                    "format": "double",
                    "description": "The bearing to the waypoint.",
                    "type": "number"
                },
                "waypointDistance": {
                    "format": "double",
                    "description": "The distance to the waypoint.",
                    "type": "number"
                },
                "navaids": {
                    "description": "The navaids referenced by this segment.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedureSegmentNavaid"
                    }
                },
                "turnDirection": {
                    "description": "The procedure segment turn direction.",
                    "type": "string"
                },
                "altitudeDescription": {
                    "description": "The procedure segment altitude description.",
                    "type": "string"
                },
                "altitude1": {
                    "description": "The procedure segment altitude 1.",
                    "type": "string"
                },
                "altitude2": {
                    "description": "The procedure segment altitude 2.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationProcedureSegmentNavaid": {
            "description": "A single navaid associated with a procedure segment.",
            "type": "object",
            "properties": {
                "navaidId": {
                    "format": "int32",
                    "description": "The ID of the navaid referenced by this segment.",
                    "type": "integer"
                },
                "bearing": {
                    "format": "double",
                    "description": "The bearing to the navaid.",
                    "type": "number"
                },
                "distance": {
                    "format": "double",
                    "description": "The distance to the navaid.",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationWaypoint": {
            "description": "Various pieces of information associated with a waypoint.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The unique identifier of the waypoint.",
                    "type": "integer"
                },
                "airportId": {
                    "format": "int32",
                    "description": "The airport id for the waypoint, if any.",
                    "type": "integer"
                },
                "countryCode": {
                    "description": "The country code of the waypoint.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the waypoint.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the waypoint.",
                    "type": "string"
                },
                "icaoCode": {
                    "description": "The ICAO code of the waypoint.",
                    "type": "string"
                },
                "usageCode": {
                    "description": "The usage code of the waypoint.",
                    "type": "string"
                },
                "latitude": {
                    "format": "double",
                    "description": "The latitude of the waypoint.",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "The longitude of the waypoint.",
                    "type": "number"
                },
                "magneticVariance": {
                    "format": "double",
                    "description": "The magnetic variance from true north at the waypoint.",
                    "type": "number"
                },
                "navaidId": {
                    "format": "int32",
                    "description": "The id of the associated naviad, if any.",
                    "type": "integer"
                },
                "colocationFlag": {
                    "description": "Flag indicating whether or not the waypoint is colocated with the navaid.",
                    "type": "boolean"
                },
                "navaidBearing": {
                    "format": "double",
                    "description": "The magnetic bearing from the navaid to the waypoint.",
                    "type": "number"
                },
                "navaidDistance": {
                    "format": "double",
                    "description": "The distance from the navaid to the waypoint.",
                    "type": "number"
                },
                "dafifId": {
                    "description": "The DAFIF text identifier of the waypoint.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Navigation.NavigationNavaid": {
            "description": "Various pieces of information associated with a waypoint.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The unique identifier of the navaid.",
                    "type": "integer"
                },
                "callsign": {
                    "description": "The radio callsign of the navaid.",
                    "type": "string"
                },
                "type": {
                    "description": "The navaid type.",
                    "type": "string"
                },
                "countryCode": {
                    "description": "The navaid's country code.",
                    "type": "string"
                },
                "stateCode": {
                    "format": "int32",
                    "description": "The navaid's state code.",
                    "type": "integer"
                },
                "name": {
                    "description": "The official name of the navaid.",
                    "type": "string"
                },
                "frequency": {
                    "format": "double",
                    "description": "The radio frequency of the navaid.",
                    "type": "number"
                },
                "usageCode": {
                    "description": "The airspace structure in which the navaid is utilized (e.g. high, low, terminal, etc.)",
                    "type": "string"
                },
                "channel": {
                    "description": "The navaid's radio channel.",
                    "type": "string"
                },
                "radioClassCode": {
                    "description": "The radio class code of the navaid (e.g. low-power NDB, high-power NDB, etc)",
                    "type": "string"
                },
                "range": {
                    "format": "double",
                    "description": "The effective range of the navaid in nautical miles.",
                    "type": "number"
                },
                "latitude": {
                    "format": "double",
                    "description": "The latitude of the navaid.",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "The longitude of the navaid.",
                    "type": "number"
                },
                "elevation": {
                    "format": "double",
                    "description": "The navaid's elevation.",
                    "type": "number"
                },
                "magneticVariance": {
                    "format": "double",
                    "description": "The magnetic varation from true north at the navaid.",
                    "type": "number"
                },
                "dmeLatitude": {
                    "format": "double",
                    "description": "The latitude of the DME equipment colocated with the navaid, if any.",
                    "type": "number"
                },
                "dmeLongitude": {
                    "format": "double",
                    "description": "The longitude of the DME equipment colocated with the navaid, if any.",
                    "type": "number"
                },
                "dmeElevation": {
                    "format": "double",
                    "description": "The elevation of the DME equipment colocated with the navaid, if any.",
                    "type": "number"
                },
                "associatedAirport": {
                    "description": "The airport code of the associated airport, if any.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the navaid (e.g. in service, out of service, etc.)",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSetGroup": {
            "description": "A container for parameter sets.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the group.",
                    "type": "string"
                },
                "groupId": {
                    "description": "The id of the group. This should be a relative path.",
                    "type": "string"
                },
                "groups": {
                    "description": "An array of groups contained by this group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSetGroup"
                    }
                },
                "sets": {
                    "description": "An array of parameter sets contained by this group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSet"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSet": {
            "description": "Encapsulates the some data defining a ParameterSet.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the ParameterSet.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional description of the ParameterSet.",
                    "type": "string"
                },
                "items": {
                    "description": "An array of the parameters contained in the ParameterSet.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSetItem"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSetItem": {
            "description": "A container for parameter sets.",
            "type": "object",
            "properties": {
                "chartIndex": {
                    "format": "int32",
                    "description": "The index of the chart that this analytic info belongs to, or null if no index specified.",
                    "type": "integer"
                },
                "parameter": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.AnalyticInfo",
                    "description": "The analytic that is represented by this parameter set item."
                },
                "customName": {
                    "description": "The custom name the user specified for the item, or null if not-specified.",
                    "type": "string"
                },
                "color": {
                    "description": "The color to use for the line in hexadecimal color specification \"#RRGGBB\", or null if no color specified.",
                    "type": "string"
                },
                "customRange": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.Core.Dto.DataRange",
                    "description": "Optional override for the vertical scale for a parameter."
                },
                "customDigitsAfterDecimal": {
                    "format": "int32",
                    "description": "Optional override for the number of digits to display.",
                    "type": "integer"
                },
                "lineWidth": {
                    "format": "int32",
                    "description": "Optional value from 1 to 5 for the width of the line.",
                    "type": "integer"
                },
                "displaySampleMarker": {
                    "description": "Optional value specifying whether the parrmeter should display shapes to indicate the sampled values.",
                    "type": "boolean"
                },
                "sampleMarkerShape": {
                    "description": "If set, describes the shape to use for the sampled values.\r\n            Possible values: [Square, Circle, Triangle, InvertedTriangle, Cross, Star]",
                    "type": "string"
                },
                "lineStyle": {
                    "description": "If set, describes the line style to use when drawing.\r\n            Possible values: [Dash, Dot, DashDot, DashDotDot, Solid]",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResults": {
            "description": "Encapsulates all the profile results for a flight.",
            "required": [
                "profileVersion",
                "parameterFiltering",
                "measurements",
                "timepoints",
                "events",
                "processingInformation"
            ],
            "type": "object",
            "properties": {
                "profileVersion": {
                    "format": "int32",
                    "description": "The integer version of the profile that was processed to generate the results,\r\n            corresponding to an index in the array of version history entries for the profile",
                    "type": "integer"
                },
                "parameterFiltering": {
                    "description": "Indicates whether automatic parameter filtering was enabled when the profile was processed",
                    "type": "boolean"
                },
                "measurements": {
                    "description": "The top-level, non-event-based, measurement results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "timepoints": {
                    "description": "The top-level, non-event-based, timepoint results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "events": {
                    "description": "The event results detected in the flight",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultsEventRecord"
                    }
                },
                "processingInformation": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProcessingInformation",
                    "description": "The processing information of the flight"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue": {
            "description": "Encapsulates information about a profile results value (measurement or timepoint).",
            "required": [
                "itemId"
            ],
            "type": "object",
            "properties": {
                "itemId": {
                    "format": "int32",
                    "description": "The integer ID of the result value in the profile",
                    "type": "integer"
                },
                "dataValue": {
                    "format": "double",
                    "description": "The computed data value for the result",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultsEventRecord": {
            "description": "Encapsulates information about an event result stored in the database.",
            "required": [
                "recordNumber",
                "eventType",
                "phaseOfFlight",
                "severity",
                "status",
                "falsePositive",
                "startTime",
                "endTime",
                "globalMeasurements",
                "globalTimepoints",
                "localMeasurements",
                "localTimepoints",
                "comments"
            ],
            "type": "object",
            "properties": {
                "recordNumber": {
                    "format": "int32",
                    "description": "The unique integer ID of the event in the database",
                    "type": "integer"
                },
                "eventType": {
                    "format": "int32",
                    "description": "The unique ID of the event definition that generated the event",
                    "type": "integer"
                },
                "phaseOfFlight": {
                    "format": "int32",
                    "description": "The phase of flight where the event occurred (which is a value from the EMS phase of flight list)",
                    "type": "integer"
                },
                "severity": {
                    "format": "int32",
                    "description": "The event severity (which is a value from the EMS severity list)",
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "description": "The status of the event (which is a value from the EMS status list). Typically this defaults to\r\n            0 for new events, but in some data-merge scenarios we need to import a non-default value\r\n            from a remote system",
                    "type": "integer"
                },
                "falsePositive": {
                    "format": "int32",
                    "description": "The false positive value for the event (a value from the EMS false positive list).\r\n            Typically this defaults to 0 for new events, but in some data-merge scenarios we\r\n            need to import a non-default value from a remote system",
                    "type": "integer"
                },
                "startTime": {
                    "format": "double",
                    "description": "The start offset for the event",
                    "type": "number"
                },
                "endTime": {
                    "format": "double",
                    "description": "The end offset for the event",
                    "type": "number"
                },
                "globalMeasurements": {
                    "description": "The global event measurement results (defined for all events)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "globalTimepoints": {
                    "description": "The global event timepoint results (defined for all events)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "localMeasurements": {
                    "description": "The event-specific measurement results (different for each event type)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "localTimepoints": {
                    "description": "The event-specific timepoint results (different for each event type)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultValue"
                    }
                },
                "comments": {
                    "description": "The event comments. Usually this is empty, but it's required for some data-merge\r\n            scenarios.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultComment"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProcessingInformation": {
            "description": "Encapsulates information about processing.",
            "required": [
                "processingState",
                "processedDate",
                "retryCount",
                "workerCpuTime",
                "workerWallTime",
                "totalWallTime",
                "isFailure",
                "failureType",
                "failureName"
            ],
            "type": "object",
            "properties": {
                "processingState": {
                    "description": "The state of the processing.",
                    "type": "string"
                },
                "processedDate": {
                    "format": "date-time",
                    "description": "The date and time that the processing occured (UTC).",
                    "type": "string"
                },
                "retryCount": {
                    "format": "int32",
                    "description": "The retry count.",
                    "type": "integer"
                },
                "workerCpuTime": {
                    "format": "float",
                    "description": "The worker cpu time of the processing in seconds.",
                    "type": "number"
                },
                "workerWallTime": {
                    "format": "float",
                    "description": "The worker wall time of the processing in seconds.",
                    "type": "number"
                },
                "totalWallTime": {
                    "format": "float",
                    "description": "The total wall time of the processing in seconds.",
                    "type": "number"
                },
                "isFailure": {
                    "description": "Whether it is a failure.",
                    "type": "boolean"
                },
                "failureType": {
                    "format": "int32",
                    "description": "The failure type.",
                    "type": "integer"
                },
                "failureName": {
                    "description": "The failure name.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileResultComment": {
            "description": "Encapsulates information about a comment.",
            "required": [
                "user",
                "date",
                "comment"
            ],
            "type": "object",
            "properties": {
                "user": {
                    "description": "The user associated with the comment",
                    "type": "string"
                },
                "date": {
                    "format": "date-time",
                    "description": "The date and time the comment was added (UTC)",
                    "type": "string"
                },
                "comment": {
                    "description": "The text of the comment",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGroup": {
            "description": "Represents a folder in the profile tree of an EMS installation.",
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "description": "The globally unique ID for the profile group",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the profile group",
                    "type": "string"
                },
                "description": {
                    "description": "The optional description that briefly describes the profile group",
                    "type": "string"
                },
                "groups": {
                    "description": "An ordered listing of child profile groups contained in this group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGroup"
                    }
                },
                "profiles": {
                    "description": "An ordered listing of child profiles contained in this group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.Profile"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.Profile": {
            "description": "Represents an APM (Automated Parameter Measurement) profile in an EMS system.",
            "required": [
                "localId",
                "id",
                "name",
                "treeLocation",
                "library",
                "currentVersion"
            ],
            "type": "object",
            "properties": {
                "localId": {
                    "format": "int32",
                    "description": "The local integer identifier for the profile",
                    "type": "integer"
                },
                "id": {
                    "description": "The globally unique identifier of the profile",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the profile",
                    "type": "string"
                },
                "treeLocation": {
                    "description": "The current location of this profile in the tree as a root-first\r\n            array of profile groups (only IDs and Names will be filled out)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGroup"
                    }
                },
                "library": {
                    "description": "Indicates whether the profile is a \"library\" profile",
                    "type": "boolean"
                },
                "currentVersion": {
                    "format": "int32",
                    "description": "The current integer version of the profile",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.ProfileGlossary": {
            "description": "A glossary for a specific profile. This describes the type of items found in a profile.",
            "required": [
                "glossaryVersion",
                "profileLocalId",
                "profileId",
                "currentVersion",
                "currentVersionGuid",
                "glossaryItems"
            ],
            "type": "object",
            "properties": {
                "glossaryVersion": {
                    "format": "int32",
                    "description": "The integer version of the glossary",
                    "type": "integer"
                },
                "profileLocalId": {
                    "format": "int32",
                    "description": "The local integer identifier of the associated profile",
                    "type": "integer"
                },
                "profileId": {
                    "description": "The globally unique identifier of the associated profile",
                    "type": "string"
                },
                "currentVersion": {
                    "format": "int32",
                    "description": "The integer version of the associated profile",
                    "type": "integer"
                },
                "currentVersionGuid": {
                    "description": "The globally unique identifier for the version of the associated profile",
                    "type": "string"
                },
                "glossaryItems": {
                    "description": "A list of all entries contained in the glossary",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Profile.GlossaryItem"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.GlossaryItem": {
            "description": "Represents a single entry for an item in a profile glossary.",
            "required": [
                "recordType",
                "scope",
                "itemId",
                "logicalId",
                "name"
            ],
            "type": "object",
            "properties": {
                "recordType": {
                    "description": "A value representing a profile glossary entries record type",
                    "enum": [
                        "measurement",
                        "timepoint",
                        "event",
                        "interval"
                    ],
                    "type": "string"
                },
                "scope": {
                    "description": "A value representing the scope of the item",
                    "enum": [
                        "default",
                        "eventSpecific",
                        "eventGlobal"
                    ],
                    "type": "string"
                },
                "itemId": {
                    "format": "int32",
                    "description": "A unique integer ID for the item",
                    "type": "integer"
                },
                "eventTypeId": {
                    "format": "int32",
                    "description": "The event type ID of the item - this is only available for valid event types",
                    "type": "integer"
                },
                "dataType": {
                    "description": "A value representing the data type of the entry",
                    "enum": [
                        "floatingPoint"
                    ],
                    "type": "string"
                },
                "logicalId": {
                    "description": "A unique ID defining the item's logical ID",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the item",
                    "type": "string"
                },
                "units": {
                    "description": "An optional unit describing how the type of data represented by the item",
                    "type": "string"
                },
                "firstAssociatedItemType": {
                    "description": "The item type of the first associated item",
                    "enum": [
                        "measurement",
                        "timepoint",
                        "event",
                        "interval"
                    ],
                    "type": "string"
                },
                "firstAssociatedItemScope": {
                    "description": "The scope of the first associated item",
                    "enum": [
                        "default",
                        "eventSpecific",
                        "eventGlobal"
                    ],
                    "type": "string"
                },
                "firstAssociatedItemId": {
                    "format": "int32",
                    "description": "The item id of the first associated item",
                    "type": "integer"
                },
                "secondAssociatedItemType": {
                    "description": "The item type of the second associated item",
                    "enum": [
                        "measurement",
                        "timepoint",
                        "event",
                        "interval"
                    ],
                    "type": "string"
                },
                "secondAssociatedItemScope": {
                    "description": "The scope of the second associated item",
                    "enum": [
                        "default",
                        "eventSpecific",
                        "eventGlobal"
                    ],
                    "type": "string"
                },
                "secondAssociatedItemId": {
                    "format": "int32",
                    "description": "The item id of the second associated item",
                    "type": "integer"
                },
                "isSavedToDatabase": {
                    "description": "A flag describing if a measurement is saved to the database",
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Profile.Event": {
            "description": "Represents an APM event definition.",
            "required": [
                "id",
                "name",
                "comments"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The definition ID of this event",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the event",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments associated with this event",
                    "type": "string"
                },
                "parameterSet": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.ParameterSet.ParameterSet",
                    "description": "The parameter set associated with the event if any"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Tableau.Trusted": {
            "description": "Represents information that can be used to access Tableau content related to an associated Tableau server.",
            "type": "object",
            "properties": {
                "trustedUrl": {
                    "description": "The URL that can be used to start a trusted session with the Tableau server.",
                    "type": "string"
                },
                "url": {
                    "description": "The root URL of the Tableau server with site.",
                    "type": "string"
                },
                "site": {
                    "description": "The site that the TrustedUrl is able to access when used.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Model.Tableau.TableauServer": {
            "description": "Represents information about the associated Tableau server.",
            "type": "object",
            "properties": {
                "url": {
                    "description": "The root URL of the Tableau server with site.",
                    "type": "string"
                },
                "site": {
                    "description": "The site being used.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Site": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "contentUrl": {
                    "type": "string"
                },
                "adminMode": {
                    "type": "string"
                },
                "userQuota": {
                    "type": "string"
                },
                "storageQuota": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                },
                "revisionHistoryEnabled": {
                    "type": "boolean"
                },
                "subscribeOthersEnabled": {
                    "type": "boolean"
                },
                "revisionLimit": {
                    "format": "int32",
                    "type": "integer"
                },
                "guestAccessEnabled": {
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "contentPermissions": {
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Workbook": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "contentUrl": {
                    "type": "string"
                },
                "showTabs": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int32",
                    "type": "integer"
                },
                "createdAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Project"
                },
                "owner": {
                    "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.User"
                },
                "tags": {
                    "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Tags"
                },
                "views": {
                    "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Views"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "siteRole": {
                    "type": "string"
                },
                "lastLogin": {
                    "format": "date-time",
                    "type": "string"
                },
                "externalAuthUserId": {
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Tags": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.Tag"
                    }
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Views": {
            "type": "object",
            "properties": {
                "view": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Shared.Tableau.Rest.View"
                    }
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.Tag": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Shared.Tableau.Rest.View": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "contentUrl": {
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.TrajectoryValueArray": {
            "description": "Encapsulates the data returned when requesting trajectory values through the API.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The points in the generated trajectory.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.TrajectoryValue"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.TrajectoryValue": {
            "description": "Encapsulates a data point defining the positional information [lat/long/alt] \r\n            for a sample and the location it occurred at, in seconds from start of file.",
            "type": "object",
            "properties": {
                "offset": {
                    "format": "double",
                    "description": "The offset of the value, in seconds from start of file.",
                    "type": "number"
                },
                "latitude": {
                    "format": "double",
                    "description": "The latitude related to the offset at {Adi.Ems.Web.Api.V2.Dto.TrajectoryValue.Offset}.",
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "The longitude related to the offset at {Adi.Ems.Web.Api.V2.Dto.TrajectoryValue.Offset}.",
                    "type": "number"
                },
                "altitude": {
                    "format": "double",
                    "description": "The altitude related to the offset at {Adi.Ems.Web.Api.V2.Dto.TrajectoryValue.Offset}.",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.TrajectoryConfiguration": {
            "description": "Encapsulates a data point defining the userOptions config for a Google Earth export.",
            "type": "object",
            "properties": {
                "trajectoryId": {
                    "description": "A unique identifier for this type of KML trajectory. \r\n            Typically this just the name of the file sans extension.",
                    "type": "string"
                },
                "description": {
                    "description": "A description of what kind of trajectory this KML type generates.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadRequest": {
            "description": "Encapsulates information that will be returned when beginning a new data ingestion transfer.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the transfer; this is not necessarily unique, and is just what the user passed \r\n            when they initiated the transfer.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the upload; this is the handler that we will use to process the uploaded data.\r\n            The format of the data will be determined by what this upload type is.",
                    "enum": [
                        "emsCollectionZipped",
                        "testTransfer",
                        "emsCollectionRaw"
                    ],
                    "type": "string"
                },
                "password": {
                    "description": "The password the data is encrypted with, if any. This point of the encryption possibility\r\n            is that this may be part of a store-and-forward system that stores the data encrypted locally.\r\n            (Thus passing it here along with the data is not particularly a security issue, but rather\r\n            a way to avoid having to decrypt it as it transfers.)\r\n            Note: This is not currently supported with any of the UploadTypes but may be in the future.",
                    "type": "string"
                },
                "totalSize": {
                    "format": "int64",
                    "description": "The total size of the data to be transferred. This may be absent in the case where the upload\r\n            is being streamed and the total size is unknown. If provided this allows you to skip making a\r\n            Finish call to the API to explicitly finish the transfer. Instead a Finish will be inferred\r\n            when sufficient bytes have been sent.",
                    "type": "integer"
                },
                "metadata": {
                    "description": "Arbitrary metadata attached to the transfer record. This may be used by post-processing later\r\n            or for other uses. If this is one of the EMS Collection UploadTypes then this information will\r\n            be added to the generated ident.xml.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadParameters": {
            "description": "Passed back to the client when a multi-part upload is started. This contains further\r\n            instructions on how to proceed with the upload, including the transfer ID to pass to\r\n            future calls, as well as any change of URL for the actual chunk uploads.",
            "type": "object",
            "properties": {
                "transferId": {
                    "description": "The ID of the transfer; this will be used when making subsequent calls to the upload APIs",
                    "type": "string"
                },
                "url": {
                    "description": "The URL for the transfer; data block transfers regarding this upload should go to this URL.\r\n            This may also be an empty string, in which case you should keep using the normal URLs",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadResult": {
            "description": "Summarizes the result of an upload operation.",
            "type": "object",
            "properties": {
                "transferSuccessful": {
                    "description": "If this is true, the transfer was successful and also the transferred data are intact.\r\n            This includes things like verifying the integrity of zip archives, for the overall transfer\r\n            completion",
                    "type": "boolean"
                },
                "message": {
                    "description": "If there was an error, then the error message will describe it. In the case of success, there\r\n            may also be a message here. This message will be suitable for display to a user",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadStatus": {
            "description": "This is sent as a response to an upload transfer status request.",
            "type": "object",
            "properties": {
                "currentCount": {
                    "format": "int64",
                    "description": "The current number of bytes the server has received on this transfer.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the upload.",
                    "enum": [
                        "transferring",
                        "waitingProcessing",
                        "processing",
                        "processedSuccess",
                        "processedFailure",
                        "abandonedTransfer",
                        "abandonedProcessing",
                        "canceled"
                    ],
                    "type": "string"
                },
                "message": {
                    "description": "Contains a user-readable message about the status of the transfer.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadRecord": {
            "description": "Represents one record in the list of uploads that we know about on the server side.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The transfer ID of the transfer, set by the server when the transfer started",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the upload",
                    "enum": [
                        "emsCollectionZipped",
                        "testTransfer",
                        "emsCollectionRaw"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Name field set by the client when the transfer started",
                    "type": "string"
                },
                "currentCount": {
                    "format": "int64",
                    "description": "The current number of bytes transferred",
                    "type": "integer"
                },
                "totalSize": {
                    "format": "int64",
                    "description": "The total size of the transfer, if known",
                    "type": "integer"
                },
                "lastTransfer": {
                    "format": "date-time",
                    "description": "The timestamp of the last time someone uploaded bytes to this transfer. This will\r\n            be used to determine when a transfer can be aborted automatically",
                    "type": "string"
                },
                "lastProcessing": {
                    "format": "date-time",
                    "description": "The timestamp of the last time someone tried to process this transfer. This will\r\n            be used to determine when a transfer can be aborted automatically",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "The start time of the transfer, from when the initial start request is made",
                    "type": "string"
                },
                "transferFinishTime": {
                    "format": "date-time",
                    "description": "The finish time of the actual data transfer portion of the process",
                    "type": "string"
                },
                "processingFinishTime": {
                    "format": "date-time",
                    "description": "The finish time of the processing portion of the process",
                    "type": "string"
                },
                "state": {
                    "description": "The state of the upload, up to and including EMS hand-off",
                    "enum": [
                        "transferring",
                        "waitingProcessing",
                        "processing",
                        "processedSuccess",
                        "processedFailure",
                        "abandonedTransfer",
                        "abandonedProcessing",
                        "canceled"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata for the upload; this is somewhat arbitrary and specific to the type\r\n            of the transfer, but in any event, it will be a JSON blob with key/value pairs",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingStatus": {
            "description": "Represents the status of an upload processing through EMS.",
            "type": "object",
            "properties": {
                "downloadRecord": {
                    "format": "int32",
                    "description": "The upload's download record, if known",
                    "type": "integer"
                },
                "downloadState": {
                    "description": "A description of the download record's processing state. This should be checked before assuming\r\n            that the download is correct and complete",
                    "enum": [
                        "notProcessed",
                        "processed",
                        "failure"
                    ],
                    "type": "string"
                },
                "flights": {
                    "description": "The upload's flight information, if known",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingFlightStatus"
                    }
                },
                "errorMessage": {
                    "description": "Any error message associated with the processing of the upload, if any",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.UploadProcessingFlightStatus": {
            "description": "A single flight result within a larger download result.",
            "type": "object",
            "properties": {
                "flightRecord": {
                    "format": "int32",
                    "description": "The flight record for the flight",
                    "type": "integer"
                },
                "flightStatus": {
                    "description": "A description of the flight record's processing state. This should be checked before assuming\r\n            that the flight is correct and complete",
                    "enum": [
                        "notProcessed",
                        "processed",
                        "failure"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Upload.Bucket": {
            "description": "The name and description of an upload bucket.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the bucket. This is unique",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the bucket",
                    "type": "string"
                },
                "associatedEmsSystem": {
                    "$ref": "#/definitions/Adi.Ems.Web.Data.Model.EmsSystem",
                    "description": "The EmsSystem that this bucket is associated with. This is used for determining \r\n            the EMS Processing status when using the processing status API"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafParseOptions": {
            "description": "Specifies options to use when calling the TAF parse API.",
            "required": [
                "taf",
                "issueDate"
            ],
            "type": "object",
            "properties": {
                "taf": {
                    "description": "The raw TAF string to parse",
                    "type": "string"
                },
                "issueDate": {
                    "format": "date-time",
                    "description": "Date information (in ISO 8601 format) the TAF was issued, since the TAF format doesn't include this \r\n            information",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafReport": {
            "description": "Represents an individual TAF report.",
            "required": [
                "issued",
                "airport",
                "validFrom",
                "validTo",
                "headerText"
            ],
            "type": "object",
            "properties": {
                "parseErrors": {
                    "description": "Error messages delimited by newlines if there were non-critical issues parsing the raw TAF string",
                    "type": "string"
                },
                "issued": {
                    "format": "date-time",
                    "description": "The time point that this TAF report was issued",
                    "type": "string"
                },
                "airport": {
                    "description": "The airport that issued the TAF report",
                    "type": "string"
                },
                "validFrom": {
                    "format": "date-time",
                    "description": "The starting time point that this TAF report is valid",
                    "type": "string"
                },
                "validTo": {
                    "format": "date-time",
                    "description": "The ending time point that this TAF report is valid",
                    "type": "string"
                },
                "predictions": {
                    "description": "A list of forecast predictions in the TAF",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.Prediction"
                    }
                },
                "headerText": {
                    "description": "The header text for the TAF",
                    "type": "string"
                },
                "flightMatchType": {
                    "description": "The time and place relative to a specific flight that this forecast data would match to",
                    "enum": [
                        "none",
                        "takeoffAtDispatch",
                        "landingAtDispatch",
                        "alternateAtDispatch",
                        "landingAtTakeoff",
                        "alternateAtTakeoff",
                        "alternateAtLanding"
                    ],
                    "type": "string"
                },
                "matchedPrediction": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.Prediction",
                    "description": "The forecast data that matches to a specific flight"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.Prediction": {
            "description": "Represents a forecast prediction originally included in a TAF.",
            "required": [
                "unparsed",
                "weatherChange"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "The ID used to uniquely identify this prediction on an EMS system",
                    "type": "integer"
                },
                "unparsed": {
                    "description": "The original, unparsed prediction string",
                    "type": "string"
                },
                "timeFrom": {
                    "format": "date-time",
                    "description": "The predicted start time for the weather in this prediction",
                    "type": "string"
                },
                "timeTo": {
                    "format": "date-time",
                    "description": "The predicted end time for the weather in this prediction. This is defined by the following predictions start time\r\n            or if it's the last prediction in a TAF it is the end of the validity window",
                    "type": "string"
                },
                "timeBecoming": {
                    "format": "date-time",
                    "description": "The time that the prediction weather is expected to occur. This is only used with the \"Becoming\" change \r\n            indicator",
                    "type": "string"
                },
                "weatherChange": {
                    "description": "The type of conditions change indicator specified. When weather conditions are reported as changing this\r\n            is \"None\"",
                    "enum": [
                        "none",
                        "from",
                        "becoming",
                        "temporary",
                        "probability",
                        "intermediate"
                    ],
                    "type": "string"
                },
                "probability": {
                    "format": "int32",
                    "description": "The probability of the weather described in this prediction occurring",
                    "type": "integer"
                },
                "windDirection": {
                    "format": "int32",
                    "description": "The wind direction in degrees or, if wind is variable this will be zero",
                    "type": "integer"
                },
                "windSpeed": {
                    "format": "int32",
                    "description": "The wind speed in knots",
                    "type": "integer"
                },
                "windGustSpeed": {
                    "format": "int32",
                    "description": "The wind gust speed in knots, if wind gust data is present",
                    "type": "integer"
                },
                "windShearHeight": {
                    "format": "int32",
                    "description": "The wind shear height in feet, if wind shear data is present",
                    "type": "integer"
                },
                "windShearDirection": {
                    "format": "int32",
                    "description": "The wind shear direction in degrees, if wind shear data is present",
                    "type": "integer"
                },
                "windShearSpeed": {
                    "format": "int32",
                    "description": "The wind shear speed in knots, if wind shear data is present",
                    "type": "integer"
                },
                "visibilityHorizontal": {
                    "format": "float",
                    "description": "The horizontal visibility in statute miles. Uses \"Infinity\" to indicate there is no limit",
                    "type": "number"
                },
                "visibilityVertical": {
                    "format": "int32",
                    "description": "The vertical visibility in feet above ground level",
                    "type": "integer"
                },
                "pressure": {
                    "format": "float",
                    "description": "Pressure above ground level in inches of mercury",
                    "type": "number"
                },
                "portionNotDecoded": {
                    "description": "Any parts of the raw prediction string that were unable to be decoded",
                    "type": "string"
                },
                "ceiling": {
                    "format": "float",
                    "description": "The lowest altitude of \"Broken\" or \"Overcast\" cloud conditions or vertical visibility. Uses \"Infinity\" to \r\n            indicate there is no limit",
                    "type": "number"
                },
                "cloudConditions": {
                    "description": "A list of cloud conditions occurring during the prediction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.CloudCondition"
                    }
                },
                "icingConditions": {
                    "description": "A list of icing conditions occurring during the prediction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.IcingCondition"
                    }
                },
                "turbulenceConditions": {
                    "description": "A list of turbulence conditions occurring during the prediction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TurbulenceCondition"
                    }
                },
                "temperatures": {
                    "description": "A list of temperature conditions occurring during the prediction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.Temperature"
                    }
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.CloudCondition": {
            "description": "Describes the condition of clouds in the sky.",
            "type": "object",
            "properties": {
                "cloudBase": {
                    "format": "float",
                    "description": "Specifies the height of the base of a visual portion of a cloud. Uses \"Infinity\" to designate there is no \r\n            limit",
                    "type": "number"
                },
                "cloudType": {
                    "description": "Describes the types of clouds appearing in the sky",
                    "enum": [
                        "none",
                        "cumulonimbus",
                        "toweringCumulis",
                        "cumulusMediocris"
                    ],
                    "type": "string"
                },
                "cloudCoverage": {
                    "description": "Describes the type of cloud cover appearing in the sky",
                    "enum": [
                        "none",
                        "few",
                        "scattered",
                        "broken",
                        "overcast",
                        "verticalVisibility",
                        "clear"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.IcingCondition": {
            "description": "Describes a forecast icing condition.",
            "type": "object",
            "properties": {
                "intensity": {
                    "format": "int32",
                    "description": "The intensity code associated with the icing. Uses the following values: \r\n            0 - Trace icing or none, \r\n            1 - Light mixed icing, \r\n            2 - Light rime icing in cloud, \r\n            3 - Light clear icing in precipitation, \r\n            4 - Moderate mixed icing, \r\n            5 - Moderate rime icing in cloud, \r\n            6 - Moderate clear icing in precipitation, \r\n            7 - Severe mixed icing, \r\n            8 - Severe rime icing in cloud, \r\n            9 - Severe clear icing in precipitation",
                    "type": "integer"
                },
                "minimum": {
                    "format": "int32",
                    "description": "The base limit of the icing layer in feet",
                    "type": "integer"
                },
                "maximum": {
                    "format": "int32",
                    "description": "The top limit of the icing layer in feet",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TurbulenceCondition": {
            "description": "Describes a forecast turbulence condition.",
            "type": "object",
            "properties": {
                "intensity": {
                    "format": "int32",
                    "description": "The intensity code associated with the turbulence. Uses the following values: \r\n            0 - None, \r\n            1 - Light turbulence, \r\n            2 - Moderate turbulence in clear air (occasional),\r\n            3 - Moderate turbulence in clear air (frequent),\r\n            4 - Moderate turbulence in cloud (occasional), \r\n            5 - Moderate turbulence in cloud (frequent),\r\n            6 - Severe turbulence in clear air (occasional),\r\n            7 - Severe turbulence in clear air (frequent),\r\n            8 - Severe turbulence in cloud (occasional),\r\n            9 - Severe turbulence in cloud (frequent)",
                    "type": "integer"
                },
                "minimum": {
                    "format": "int32",
                    "description": "The base limit of the turbulence layer in feet",
                    "type": "integer"
                },
                "maximum": {
                    "format": "int32",
                    "description": "The top limit of the turbulence layer in feet",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.Temperature": {
            "description": "Describes a forecast temperature.",
            "type": "object",
            "properties": {
                "validTime": {
                    "format": "date-time",
                    "description": "Describes the time at which the temperature forecast is valid",
                    "type": "string"
                },
                "surface": {
                    "format": "float",
                    "description": "The expected surface temperature value",
                    "type": "number"
                },
                "maximum": {
                    "format": "float",
                    "description": "The expected maximum temperature value",
                    "type": "number"
                },
                "minimum": {
                    "format": "float",
                    "description": "The expected minimum temperature value",
                    "type": "number"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarParseOptions": {
            "description": "Specifies options to use when calling the METAR parse API.",
            "required": [
                "metar"
            ],
            "type": "object",
            "properties": {
                "metar": {
                    "description": "The raw METAR string to parse",
                    "type": "string"
                },
                "issueDate": {
                    "format": "date-time",
                    "description": "Optional date information (in ISO 8601 format) the METAR was issued, since the METAR format only includes\r\n            day, hour and minute time information.",
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarReport": {
            "description": "Represents an individual METAR report.",
            "required": [
                "unparsed",
                "airport",
                "isAutomatic",
                "isWeatherDataValid",
                "isCloudDataValid"
            ],
            "type": "object",
            "properties": {
                "unparsed": {
                    "description": "The unparsed but de-identified METAR string",
                    "type": "string"
                },
                "airport": {
                    "description": "The airport that issued the METAR report",
                    "type": "string"
                },
                "issued": {
                    "format": "date-time",
                    "description": "The day, hour and minute the METAR was issued. May also optionally contain the month and year issued if the\r\n            date contextual information is available",
                    "type": "string"
                },
                "isAutomatic": {
                    "description": "Indicates whether the original METAR data was automatically generated",
                    "type": "boolean"
                },
                "windDirection": {
                    "format": "float",
                    "description": "The wind direction in degrees or, if wind is variable this will be zero",
                    "type": "number"
                },
                "windSpeed": {
                    "format": "float",
                    "description": "The wind speed in knots",
                    "type": "number"
                },
                "windGustSpeed": {
                    "format": "float",
                    "description": "The wind gust speed in knots, if wind gust data is present",
                    "type": "number"
                },
                "windDirectionVariableStart": {
                    "format": "float",
                    "description": "When wind is variable, the approximate end range of the wind direction in degrees",
                    "type": "number"
                },
                "windDirectionVariableEnd": {
                    "format": "float",
                    "description": "When wind is variable, the approximate end range of the wind direction in degrees",
                    "type": "number"
                },
                "effectiveVisibility": {
                    "format": "float",
                    "description": "The effective visibility in statute miles",
                    "type": "number"
                },
                "exactVisibility": {
                    "format": "float",
                    "description": "The exact reported visibility in statute miles. Uses \"Infinity\" to indicate there is no limit",
                    "type": "number"
                },
                "visibilityQualifier": {
                    "description": "A qualifier describing the current exact reported visibility",
                    "enum": [
                        "equal",
                        "greaterThan",
                        "lessThan"
                    ],
                    "type": "string"
                },
                "runwayVisualRanges": {
                    "description": "A list of runway visual ranges for reported runways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.RunwayVisualRange"
                    }
                },
                "currentWeather": {
                    "description": "A list of current weather phenomenons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.WeatherPhenomenon"
                    }
                },
                "recentWeather": {
                    "description": "A list of recently occurring weather phenomenons",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.WeatherPhenomenon"
                    }
                },
                "isWeatherDataValid": {
                    "description": "Indicates whether all current/recent reported weather phenomenons had valid sensor data",
                    "type": "boolean"
                },
                "cloudConditions": {
                    "description": "A list of current cloud conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.CloudCondition"
                    }
                },
                "ceiling": {
                    "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.CloudCondition",
                    "description": "The lowest \"Broken\", \"Overcast\" or \"Vertical Visibility\" cloud conditions associated with this object"
                },
                "isCloudDataValid": {
                    "description": "Indicates whether all reported cloud conditions had valid sensor data",
                    "type": "boolean"
                },
                "maxCloudHeight": {
                    "format": "float",
                    "description": "The maximum height of the base of a visual portion of one of the cloud conditions associated with this \r\n            object. Uses \"Infinity\" to indicate there is no limit",
                    "type": "number"
                },
                "temperature": {
                    "format": "float",
                    "description": "The current temperature value in degrees Celsius",
                    "type": "number"
                },
                "dewpoint": {
                    "format": "float",
                    "description": "The current dew point value in degrees Celsius",
                    "type": "number"
                },
                "pressure": {
                    "format": "float",
                    "description": "Pressure above ground level in inches of mercury",
                    "type": "number"
                },
                "runwayConditions": {
                    "description": "A list of current runway conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.RunwayCondition"
                    }
                },
                "flightMatchType": {
                    "description": "The time and place relative to a specific flight that this METAR data would match to",
                    "enum": [
                        "none",
                        "takeoff",
                        "landing"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Metar.RunwayVisualRange": {
            "description": "Describes the current 10-minute average visual range for a runway, which is the distance over which a pilot\r\n            can see the runway surface markings.",
            "required": [
                "runway"
            ],
            "type": "object",
            "properties": {
                "runway": {
                    "description": "The name/number/approach direction identifying the runway",
                    "type": "string"
                },
                "visibilityPrimary": {
                    "format": "float",
                    "description": "The primary runway visibility distance in feet. If a variable range is set, this value describes the \r\n            minimum visibility distance in a visual range",
                    "type": "number"
                },
                "visibilityPrimaryQualifier": {
                    "description": "A qualifier describing the primary visibility distance",
                    "enum": [
                        "equal",
                        "greaterThan",
                        "lessThan"
                    ],
                    "type": "string"
                },
                "visibilityVariable": {
                    "format": "float",
                    "description": "The variable runway visibility distance in feet, describing the maximum visibility distance in the \r\n            visual range",
                    "type": "number"
                },
                "visibilityVariableQualifier": {
                    "description": "A qualifier describing the variable visibility distance",
                    "enum": [
                        "equal",
                        "greaterThan",
                        "lessThan"
                    ],
                    "type": "string"
                },
                "trend": {
                    "description": "The trend of the runway visibility distance",
                    "enum": [
                        "unknown",
                        "noChange",
                        "increasing",
                        "decreasing"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.WeatherPhenomenon": {
            "description": "Describes an individual weather phenomenon.",
            "required": [
                "unparsed"
            ],
            "type": "object",
            "properties": {
                "unparsed": {
                    "description": "The original, unparsed weather phenomenon string",
                    "type": "string"
                },
                "intensity": {
                    "description": "Describes the intensity of the whether phenomenon",
                    "enum": [
                        "light",
                        "moderate",
                        "heavy",
                        "vicinity"
                    ],
                    "type": "string"
                },
                "qualifier": {
                    "description": "A qualifier for any weather precipitation",
                    "enum": [
                        "none",
                        "shallow",
                        "partial",
                        "patchy",
                        "drifting",
                        "blowing",
                        "showers",
                        "thunderstorms",
                        "freezing"
                    ],
                    "type": "string"
                },
                "precipitation": {
                    "description": "The type of precipitation that this phenomenon represents",
                    "enum": [
                        "none",
                        "drizzle",
                        "rain",
                        "snow",
                        "snowGrains",
                        "iceCrystals",
                        "icePellets",
                        "hail",
                        "smallHail",
                        "unknown"
                    ],
                    "type": "string"
                },
                "precipitationSecondary": {
                    "description": "The secondary type of precipitation that can be optionally specified to more accurately describe the \r\n            precipitation",
                    "enum": [
                        "none",
                        "drizzle",
                        "rain",
                        "snow",
                        "snowGrains",
                        "iceCrystals",
                        "icePellets",
                        "hail",
                        "smallHail",
                        "unknown"
                    ],
                    "type": "string"
                },
                "obscuration": {
                    "description": "Any weather that can obscure vision",
                    "enum": [
                        "none",
                        "mist",
                        "fog",
                        "smoke",
                        "volcanicAsh",
                        "dust",
                        "sand",
                        "haze",
                        "spray"
                    ],
                    "type": "string"
                },
                "other": {
                    "description": "Other weather cases that do not fall under precipitation",
                    "enum": [
                        "none",
                        "dustWhirls",
                        "squalls",
                        "funnelCloud",
                        "sandstorm",
                        "duststorm"
                    ],
                    "type": "string"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Metar.RunwayCondition": {
            "description": "Describes the condition of a runway.",
            "required": [
                "unparsed",
                "runway",
                "isClear"
            ],
            "type": "object",
            "properties": {
                "unparsed": {
                    "description": "The original, unparsed runway conditions string",
                    "type": "string"
                },
                "runway": {
                    "description": "The name/number/approach direction identifying the runway",
                    "type": "string"
                },
                "depositType": {
                    "description": "The type of deposits currently on the runway",
                    "enum": [
                        "dry",
                        "damp",
                        "wet",
                        "frost",
                        "snowDry",
                        "snowWet",
                        "slush",
                        "ice",
                        "snowCompacted",
                        "frozenRuts",
                        "none"
                    ],
                    "type": "string"
                },
                "coverage": {
                    "description": "The coverage of deposits currently on the runway",
                    "enum": [
                        "coverage10Less",
                        "coverage11To25",
                        "covarege26To50",
                        "coverage51To100",
                        "noInformation"
                    ],
                    "type": "string"
                },
                "depth": {
                    "format": "float",
                    "description": "Indicates the depth of deposits currently on the runway in centimeters",
                    "type": "number"
                },
                "braking": {
                    "description": "The \"braking action\" value describing the current braking conditions of the runway",
                    "enum": [
                        "unreliable",
                        "poor",
                        "mediumPoor",
                        "medium",
                        "mediumGood",
                        "good",
                        "none"
                    ],
                    "type": "string"
                },
                "friction": {
                    "format": "float",
                    "description": "The \"coefficient of friction\" value that alternatively describes the current braking conditions of the \r\n            runway",
                    "type": "number"
                },
                "isClear": {
                    "description": "Indicating whether the runway conditions are clear of deposits",
                    "type": "boolean"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafQuery": {
            "description": "Defines the options that can be used to query for TAF reports.",
            "type": "object",
            "properties": {
                "airportId": {
                    "format": "int32",
                    "description": "Optional airport ID for an airport returned by the Assets APIs. If set then ICAO code should not be set",
                    "type": "integer"
                },
                "airportIcao": {
                    "description": "Optional airport ICAO code. If set then airportId should not be set",
                    "type": "string"
                },
                "issueRangeFrom": {
                    "format": "date-time",
                    "description": "Optional date range from filter. If set all TAFs issued after this value will be returned",
                    "type": "string"
                },
                "issueRangeTo": {
                    "format": "date-time",
                    "description": "Optional date range to filter. If set all TAFs issued before this value will be returned",
                    "type": "string"
                },
                "validRangeFrom": {
                    "format": "date-time",
                    "description": "Optional date range from filter. If set any TAF that is valid from this point to validRangeTo\r\n            will be returned. If set validRangeTo must also be set",
                    "type": "string"
                },
                "validRangeTo": {
                    "format": "date-time",
                    "description": "Optional date range from filter. If set any TAF that is valid to this point from validRangeFrom\r\n            will be returned. If set validRangeFrom must also be set",
                    "type": "string"
                },
                "validTime": {
                    "format": "date-time",
                    "description": "Optional single time point for which to return all valid TAFs",
                    "type": "string"
                },
                "visibilityMinimum": {
                    "format": "float",
                    "description": "Optional value indicating the minimum observed visibility in miles. Since TAFs have multiple visibility values if any one value in the TAF meets \r\n            this criteria that TAF will be returned",
                    "type": "number"
                },
                "visibilityMaximum": {
                    "format": "float",
                    "description": "Optional value indicating the maximum observed visibility in miles. Since TAFs have multiple visibility values if any one value in the TAF meets \r\n            this criteria that TAF will be returned",
                    "type": "number"
                },
                "ceilingMinimum": {
                    "format": "float",
                    "description": "Optional value indicating the minimum observed ceiling in feet. Since TAFs have multiple visibility values if any one value in the TAF meets \r\n            this criteria that TAF will be returned",
                    "type": "number"
                },
                "ceilingMaximum": {
                    "format": "float",
                    "description": "Optional value indicating the maximum observed ceiling in feet. Since TAFs have multiple visibility values if any one value in the TAF meets \r\n            this criteria that TAF will be returned",
                    "type": "number"
                },
                "maxResults": {
                    "format": "int32",
                    "description": "The maximum number of results to return. If set to 0 all results will be returned. This defaults to 200",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarQuery": {
            "description": "Defines the options that can be used to query for METAR reports.",
            "type": "object",
            "properties": {
                "airportId": {
                    "format": "int32",
                    "description": "Optional airport ID for an airport returned by the Assets APIs. If set then ICAO code should not be set",
                    "type": "integer"
                },
                "airportIcao": {
                    "description": "Optional airport ICAO code. If set then airportId should not be set",
                    "type": "string"
                },
                "observationRangeFrom": {
                    "format": "date-time",
                    "description": "Optional date range from filter. If set all METARs issued after this value will be returned",
                    "type": "string"
                },
                "observationRangeTo": {
                    "format": "date-time",
                    "description": "Optional date range to filter. If set all METARs issued before this value will be returned",
                    "type": "string"
                },
                "visibilityMinimum": {
                    "format": "float",
                    "description": "Optional value indicating the minimum observed visibility in miles",
                    "type": "number"
                },
                "visibilityMaximum": {
                    "format": "float",
                    "description": "Optional value indicating the maximum observed visibility in miles",
                    "type": "number"
                },
                "ceilingMinimum": {
                    "format": "float",
                    "description": "Optional value indicating the minimum observed ceiling in feet",
                    "type": "number"
                },
                "ceilingMaximum": {
                    "format": "float",
                    "description": "Optional value indicating the maximum observed ceiling in feet",
                    "type": "number"
                },
                "maxResults": {
                    "format": "int32",
                    "description": "The maximum number of results to return. If set to 0 all results will be returned. This defaults to 200",
                    "type": "integer"
                }
            }
        },
        "Adi.Ems.Web.Api.V2.Dto.Weather.WeatherReport": {
            "description": "Represents TAF and METAR weather reports collected by an EMS system.",
            "required": [
                "tafReports",
                "metarReports"
            ],
            "type": "object",
            "properties": {
                "tafReports": {
                    "description": "A list of collected TAF reports from an EMS system",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Taf.TafReport"
                    }
                },
                "metarReports": {
                    "description": "A list of collected METAR reports from an EMS system",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Adi.Ems.Web.Api.V2.Dto.Weather.Metar.MetarReport"
                    }
                }
            }
        }
    }
}